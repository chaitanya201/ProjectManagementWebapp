{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowSingleProject.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectMembers from \"./ProjectMembers\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport ShowUsersToSelectForProject from \"./ShowUsersToSelectForProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowSingleProject() {\n  _s();\n\n  // accessing the value from link component using useLocation hook\n  const location = useLocation();\n  const {\n    project,\n    users\n  } = location.state;\n  console.log(\"location state\", location.state);\n  const [msg, setMsg] = useState(null);\n  const [title, setTitle] = useState(project.name);\n  const [desc, setDesc] = useState(project.desc);\n  const [head, setHead] = useState(project.head);\n  const [members, setMembers] = useState(project.members);\n  const [status, setStatus] = useState(project.status);\n  let totalMembers = []; // const [totalEmployee, setTotalEmployee] = useState(users);\n\n  const arrOfEmpID = [];\n  const arrayOfIDOfAllEmployee = [];\n  const arrayOfIDOfAllMembers = [];\n\n  for (let index = 0; index < users.length; index++) {\n    if (users[index]) {\n      arrayOfIDOfAllEmployee.push(users[index]._id);\n    }\n  }\n\n  for (let index = 0; index < members.length; index++) {\n    if (members[index]) {\n      arrayOfIDOfAllMembers.push(members[index]._id);\n    }\n  }\n\n  for (let index = 0; index < users.length; index++) {\n    if (users[index]) {\n      if (arrayOfIDOfAllMembers.includes(users[index]._id)) {\n        delete users[index];\n      }\n    }\n  }\n\n  for (let index = 0; index < members.length; index++) {\n    if (members[index]) {\n      if (!arrayOfIDOfAllEmployee.includes(members[index]._id)) {\n        arrOfEmpID.push(members[index]._id);\n      }\n    }\n  } // for (let index = 0; index < totalEmployee.length; index++) {\n  //     arrOfEmpID.push(totalEmployee[index]._id)\n  // }\n\n\n  const navigate = useNavigate();\n\n  for (let index = 0; index < members.length; index++) {\n    totalMembers.push(members[index]._id);\n  }\n\n  console.log(\"current members are \", totalMembers);\n  console.log(\"total users are \", users);\n\n  const onFormSubmit = async event => {\n    const currentMembers = [];\n\n    for (let index = 0; index < totalMembers.length; index++) {\n      if (totalMembers[index]) {\n        currentMembers.push(totalMembers[index]);\n      }\n    }\n\n    for (let index = 0; index < arrOfEmpID.length; index++) {\n      if (arrOfEmpID[index] && !currentMembers.includes(arrOfEmpID[index])) {\n        currentMembers.push(arrOfEmpID[index]);\n      }\n    }\n\n    if (currentMembers.length <= 0) {\n      console.log(\"setting the msg \");\n      return setMsg(\"Select at least one member\");\n    }\n\n    console.log(\"msg is \", msg);\n    console.log(\"in form all members \", totalMembers);\n    event.preventDefault();\n    const newProject = {\n      _id: project._id,\n      name: title,\n      desc,\n      head,\n      members: currentMembers,\n      status\n    }; // saving all the data \n\n    const response = axios.post(\"http://localhost:5000/user/update-project\", newProject);\n    console.log(\"response data is \", (await response).data);\n\n    if ((await response).data) {\n      setMsg(\"success\");\n    } else {\n      setMsg(\"failed\");\n    }\n\n    navigate(\"/update-project\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [msg, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      className: \"w-full max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        className: \"py-2\",\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-gray-200 appearance-none border-2 py-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\",\n        id: \"inline-full-name\",\n        type: \"text\",\n        value: title,\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        className: \"py-2\",\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\",\n        id: \"inline-full-name\",\n        type: \"text\",\n        value: desc,\n        onChange: event => {\n          setDesc(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        className: \"py-2\",\n        children: \"Project Head: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\",\n        id: \"inline-full-name\",\n        type: \"text\",\n        value: head,\n        onChange: event => setHead(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        className: \"py-2\",\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\",\n        id: \"inline-full-name\",\n        type: \"text\",\n        value: status,\n        onChange: event => setStatus(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), members ? members.map(user => {\n        return /*#__PURE__*/_jsxDEV(ProjectMembers, {\n          user: user,\n          setMembers: totalMembers\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No members are allocated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), users ? users.map(user => {\n        if (user) {\n          return /*#__PURE__*/_jsxDEV(ShowUsersToSelectForProject, {\n            user: user,\n            totalEmployee: arrOfEmpID\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 28\n          }, this);\n        }\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"update project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowSingleProject, \"JeUk0tqRqHPasKs/xG4W0/wFoNw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ShowSingleProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSingleProject\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowSingleProject.js"],"names":["React","Link","ProjectMembers","useLocation","useState","axios","useNavigate","ShowUsersToSelectForProject","ShowSingleProject","location","project","users","state","console","log","msg","setMsg","title","setTitle","name","desc","setDesc","head","setHead","members","setMembers","status","setStatus","totalMembers","arrOfEmpID","arrayOfIDOfAllEmployee","arrayOfIDOfAllMembers","index","length","push","_id","includes","navigate","onFormSubmit","event","currentMembers","preventDefault","newProject","response","post","data","target","value","map","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectMembers from \"./ProjectMembers\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ShowUsersToSelectForProject from \"./ShowUsersToSelectForProject\";\r\n\r\n\r\nexport default function ShowSingleProject() {\r\n  // accessing the value from link component using useLocation hook\r\n  const location = useLocation();\r\n  const { project, users } = location.state;\r\n  console.log(\"location state\", location.state);\r\n  const [msg, setMsg] = useState(null);\r\n  const [title, setTitle] = useState(project.name);\r\n  const [desc, setDesc] = useState(project.desc);\r\n  const [head, setHead] = useState(project.head);\r\n  const [members, setMembers] = useState(project.members);\r\n  const [status, setStatus] = useState(project.status);\r\n  let totalMembers = [];\r\n    // const [totalEmployee, setTotalEmployee] = useState(users);\r\n    const arrOfEmpID = []\r\n    const arrayOfIDOfAllEmployee = []\r\n    const arrayOfIDOfAllMembers = []\r\n    for (let index = 0; index < users.length; index++) {\r\n        if(users[index]) {\r\n            arrayOfIDOfAllEmployee.push(users[index]._id)\r\n        }\r\n    }\r\n    for (let index = 0; index < members.length; index++) {\r\n        if(members[index]) {\r\n            arrayOfIDOfAllMembers.push(members[index]._id)\r\n        }\r\n    }\r\n    for (let index = 0; index < users.length; index++) {\r\n        if(users[index]) {\r\n            if(arrayOfIDOfAllMembers.includes(users[index]._id)) {\r\n                delete users[index]\r\n            }\r\n        }\r\n    }\r\n    \r\n    for (let index = 0; index < members.length; index++) {\r\n        if(members[index]) {\r\n            if(!arrayOfIDOfAllEmployee.includes(members[index]._id)) {\r\n                arrOfEmpID.push(members[index]._id)\r\n            }\r\n        }\r\n    }\r\n    // for (let index = 0; index < totalEmployee.length; index++) {\r\n    //     arrOfEmpID.push(totalEmployee[index]._id)\r\n        \r\n    // }\r\n  const navigate = useNavigate()\r\n  for (let index = 0; index < members.length; index++) {\r\n    totalMembers.push(members[index]._id);\r\n  }\r\n  console.log(\"current members are \", totalMembers);\r\n  console.log(\"total users are \", users);\r\n  const onFormSubmit = async (event) => {\r\n\r\n    const currentMembers = []\r\n    for (let index = 0; index < totalMembers.length; index++) {\r\n        if(totalMembers[index]) {\r\n            currentMembers.push(totalMembers[index])\r\n        }\r\n    }\r\n\r\n    for (let index = 0; index < arrOfEmpID.length; index++) {\r\n        if(arrOfEmpID[index] && !currentMembers.includes(arrOfEmpID[index])) {\r\n            currentMembers.push(arrOfEmpID[index])\r\n        }\r\n    }\r\n\r\n    if(currentMembers.length <= 0) {\r\n        console.log(\"setting the msg \");\r\n        return setMsg(\"Select at least one member\")\r\n    }\r\n\r\n\r\n    console.log(\"msg is \", msg);\r\n    console.log(\"in form all members \", totalMembers);\r\n    event.preventDefault();\r\n    const newProject = {\r\n        _id: project._id,\r\n      name: title,\r\n      desc,\r\n      head,\r\n      members: currentMembers,\r\n      status\r\n    };\r\n\r\n    // saving all the data \r\n    const response = axios.post(\"http://localhost:5000/user/update-project\", newProject)\r\n    console.log(\"response data is \", (await response).data);\r\n    if((await response).data) {\r\n        setMsg(\"success\")\r\n    } else {\r\n        setMsg(\"failed\")\r\n    }\r\n    navigate(\"/update-project\")\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <h1>{msg} </h1>\r\n      \r\n      \r\n      <form onSubmit={onFormSubmit} className=\"w-full max-w-sm\">\r\n        <label htmlFor=\"fhs\" className=\"py-2\" >Title: </label>\r\n        <input className=\"bg-gray-200 appearance-none border-2 py-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(event) => {\r\n            setTitle(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2\" >Description: </label>\r\n        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(event) => {\r\n            setDesc(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2\" >Project Head: </label>\r\n        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={head}\r\n          onChange={(event) => setHead(event.target.value)}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2\" >Status: </label>\r\n        <input className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\" id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={status}\r\n          onChange={(event) => setStatus(event.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <h2>Project Members</h2>\r\n        {members ? (\r\n          members.map((user) => {\r\n            return <ProjectMembers user={user} setMembers={totalMembers} key={user._id} />;\r\n          })\r\n        ) : (\r\n          <div>No members are allocated</div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <h2>Other Employees</h2>\r\n        {\r\n            users? users.map((user) => {\r\n                if(user) {\r\n                    return <ShowUsersToSelectForProject user = {user} totalEmployee={arrOfEmpID} key={user._id} />\r\n                }\r\n            }) : <div>No users found</div>\r\n        }\r\n        <input type=\"submit\" value=\"update project\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}