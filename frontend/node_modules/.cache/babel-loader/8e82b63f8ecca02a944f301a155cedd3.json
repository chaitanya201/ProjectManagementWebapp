{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Alert from \"./Alert\";\nimport { updateTasks } from \"../store/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask(_ref) {\n  _s();\n\n  let {\n    setClicked,\n    project\n  } = _ref;\n  const [task, setTask] = useState(\"\");\n  const user = useSelector(state => state.userObj.userObj);\n  const allTasks = useSelector(state => state.allTasks.allTasks);\n  const [msg, setMsg] = useState(null);\n  const dispatch = useDispatch();\n  const [selectedOption, setSelectedOption] = useState(\"high\");\n\n  const handleOptionChange = event => {\n    console.log(\"changed value\", event.target.value);\n    setSelectedOption(event.target.value);\n  };\n\n  console.log(\"default option \", selectedOption);\n  const options = [{\n    label: \"High Priority\",\n    value: \"high\",\n    id: \"1\"\n  }, {\n    label: \"Medium Priority\",\n    value: \"medium\",\n    id: \"2\"\n  }, {\n    label: \"Low Priority\",\n    value: \"low\",\n    id: \"3\"\n  }];\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    if (task.length <= 0) {\n      return;\n    }\n\n    if (allTasks) {\n      for (let i = 0; i < allTasks.length; i++) {\n        if (allTasks[i].task === task) {\n          setMsg(\"Task already exists\");\n          return;\n        }\n      }\n    }\n\n    setClicked(false);\n    const url = \"http://localhost:5000/user/save-tasks\";\n    const data = {\n      userID: user._id,\n      projectID: project._id,\n      tasks: task,\n      priority: selectedOption,\n      position: user.position\n    };\n    const response = await axios.post(url, data);\n    console.log(\"response data0 \", response.data.tasks[0].tasks);\n\n    if (response.data.status !== \"success\") {\n      setMsg(response.data.msg); // dispatch(updateTasks())\n    } else {\n      dispatch(updateTasks({\n        projectID: project._id,\n        tasks: [...response.data.tasks[0].tasks]\n      }));\n      console.log(\"after updation !!!!1 tasks \", response.data.tasks.tasks);\n      console.log(\"response \", response.data);\n      console.log(\"after updation !!!!1 userID \", response.data.userID);\n      console.log(\"add tasks after updation !!!!!1\", response.data.tasks[0].tasks);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), msg ? /*#__PURE__*/_jsxDEV(Alert, {\n      msg: msg,\n      alertColor: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleOptionChange,\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleOptionChange,\n          children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"task\",\n        value: task,\n        cols: \"30\",\n        rows: \"10\",\n        onChange: event => {\n          setTask(event.target.value);\n        },\n        className: \"\\r form-control\\r block\\r w-full\\r px-3\\r py-1.5\\r text-base\\r font-normal\\r text-gray-700\\r bg-white bg-clip-padding\\r border border-solid border-gray-300\\r rounded\\r transition\\r ease-in-out\\r m-0\\r focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\\r \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTask, \"V50qK1AXzmXWvjP3CTp8epXS/wk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/AddTask.js"],"names":["axios","React","useState","useSelector","useDispatch","Alert","updateTasks","AddTask","setClicked","project","task","setTask","user","state","userObj","allTasks","msg","setMsg","dispatch","selectedOption","setSelectedOption","handleOptionChange","event","console","log","target","value","options","label","id","onFormSubmit","e","preventDefault","length","i","url","data","userID","_id","projectID","tasks","priority","position","response","post","status","map","option"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Alert from \"./Alert\";\r\nimport { updateTasks } from \"../store/taskSlice\";\r\n\r\nexport default function AddTask({ setClicked, project }) {\r\n  const [task, setTask] = useState(\"\");\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  const allTasks = useSelector((state) => state.allTasks.allTasks);\r\n\r\n  const [msg, setMsg] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedOption, setSelectedOption] = useState(\"high\");\r\n  const handleOptionChange = (event) => {\r\n    console.log(\"changed value\", event.target.value);\r\n    setSelectedOption(event.target.value);\r\n  };\r\n  console.log(\"default option \", selectedOption);\r\n  const options = [\r\n    { label: \"High Priority\", value: \"high\", id: \"1\" },\r\n    { label: \"Medium Priority\", value: \"medium\", id: \"2\" },\r\n    { label: \"Low Priority\", value: \"low\", id: \"3\" },\r\n  ];\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (task.length <= 0) {\r\n      return;\r\n    }\r\n    if (allTasks) {\r\n      for (let i = 0; i < allTasks.length; i++) {\r\n        if (allTasks[i].task === task) {\r\n          setMsg(\"Task already exists\");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    setClicked(false);\r\n    const url = \"http://localhost:5000/user/save-tasks\";\r\n    const data = {\r\n      userID: user._id,\r\n      projectID: project._id,\r\n      tasks: task,\r\n      priority: selectedOption,\r\n      position: user.position,\r\n    };\r\n    const response = await axios.post(url, data);\r\n    console.log(\"response data0 \", response.data.tasks[0].tasks);\r\n    if (response.data.status !== \"success\") {\r\n      setMsg(response.data.msg);\r\n      // dispatch(updateTasks())\r\n    } else {\r\n      dispatch(\r\n        updateTasks({\r\n          projectID: project._id,\r\n          tasks: [...response.data.tasks[0].tasks],\r\n        })\r\n      );\r\n      console.log(\"after updation !!!!1 tasks \", response.data.tasks.tasks);\r\n      console.log(\"response \", response.data);\r\n      console.log(\"after updation !!!!1 userID \", response.data.userID);\r\n      console.log(\r\n        \"add tasks after updation !!!!!1\",\r\n        response.data.tasks[0].tasks\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Create task</h3>\r\n      {msg ? <Alert msg={msg} alertColor={\"red\"} /> : <div></div>}\r\n      <form onSubmit={onFormSubmit} method=\"post\">\r\n        <div>\r\n          <select onChange={handleOptionChange}>\r\n            {options.map((option) => (\r\n              <option value={option.value} key={option.id}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select onChange={handleOptionChange}>\r\n            {options.map((option) => (\r\n              <option value={option.value} key={option.id}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <textarea\r\n          name=\"task\"\r\n          value={task}\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          onChange={(event) => {\r\n            setTask(event.target.value);\r\n          }}\r\n          className=\"\r\n        form-control\r\n        block\r\n        w-full\r\n        px-3\r\n        py-1.5\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border border-solid border-gray-300\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n      \"\r\n        ></textarea>\r\n        <br />\r\n        <input type=\"submit\" value=\"Add task\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}