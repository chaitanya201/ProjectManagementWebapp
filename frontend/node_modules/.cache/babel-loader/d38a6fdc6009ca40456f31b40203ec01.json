{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\UserSingleProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RenderProjectMembers from \"./RenderProjectMembers\";\nimport AddTask from \"./AddTask\";\nimport ShowTasks from \"./ShowTasks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { updateTasks } from \"../store/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserSingleProject(_ref) {\n  _s();\n\n  let {\n    project,\n    setTaskAdded\n  } = _ref;\n  const [clicked, setClicked] = useState(false);\n  const dispatch = useDispatch(); // creating object of dispatch using useDispatch()\n\n  const allTasks = useSelector(state => state.allTasks.allTasks);\n  const user = useSelector(state => state.userObj.userObj);\n  useEffect(() => {\n    const getTasks = async () => {\n      const response = await axios.get('http://localhost:5000/user/get-tasks/?userID=' + user._id + \"&position=\" + user.position);\n\n      if (response.data.status === \"success\") {\n        dispatch(updateTasks);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block p-6 rounded-lg shadow-lg bg-white max-w-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-white text-xl leading-tight font-medium mb-2 bg-purple-400 px-4\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-white text-xl leading-tight font-medium mb-2 bg-amber-300 px-4\",\n            children: project.head\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 text-base mb-4\",\n          children: project.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \" flex justify-center py-4\",\n          children: \"Project Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), project.members.map(obj => {\n          return /*#__PURE__*/_jsxDEV(RenderProjectMembers, {\n            user: obj\n          }, obj._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), !clicked ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setClicked(true);\n          },\n          className: \"text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(AddTask, {\n          setClicked: setClicked,\n          project: project,\n          setTaskAdded: setTaskAdded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserSingleProject, \"YJQ+O3Q4NB6AQCXc82obls8GcsY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserSingleProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSingleProject\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/UserSingleProject.js"],"names":["React","useState","useEffect","RenderProjectMembers","AddTask","ShowTasks","useSelector","useDispatch","axios","updateTasks","UserSingleProject","project","setTaskAdded","clicked","setClicked","dispatch","allTasks","state","user","userObj","getTasks","response","get","_id","position","data","status","name","head","desc","members","map","obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RenderProjectMembers from \"./RenderProjectMembers\";\r\nimport AddTask from \"./AddTask\";\r\nimport ShowTasks from \"./ShowTasks\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {updateTasks} from \"../store/taskSlice\"\r\nexport default function UserSingleProject({ project, setTaskAdded }) {\r\n  const [clicked, setClicked] = useState(false);\r\n  const dispatch = useDispatch(); // creating object of dispatch using useDispatch()\r\n\r\n  const allTasks = useSelector((state) => state.allTasks.allTasks)\r\n  const user = useSelector((state) => state.userObj.userObj)\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const response = await axios.get('http://localhost:5000/user/get-tasks/?userID='+user._id+\"&position=\" + user.position)\r\n      if(response.data.status === \"success\") {\r\n        dispatch(updateTasks)\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"block p-6 rounded-lg shadow-lg bg-white max-w-sm\">\r\n          <div className=\"flex space-x-4 \">\r\n            <h5 className=\"text-white text-xl leading-tight font-medium mb-2 bg-purple-400 px-4\">\r\n              {project.name}\r\n            </h5>\r\n            <h5 className=\"text-white text-xl leading-tight font-medium mb-2 bg-amber-300 px-4\">\r\n              {project.head}\r\n            </h5>\r\n          </div>\r\n          <p className=\"text-gray-700 text-base mb-4\">{project.desc}</p>\r\n\r\n          <h3 className=\" flex justify-center py-4\">Project Members</h3>\r\n          {project.members.map((obj) => {\r\n            return <RenderProjectMembers user={obj} key={obj._id} />;\r\n          })}\r\n          <br />\r\n\r\n          <h2>All tasks</h2>\r\n\r\n\r\n          \r\n          {!clicked ? (\r\n            <button\r\n              onClick={() => {\r\n                setClicked(true);\r\n              }}\r\n              className=\"text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n            >\r\n              New Task\r\n            </button>\r\n          ) : (\r\n            <AddTask setClicked={setClicked} project={project} setTaskAdded={setTaskAdded} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}