{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowTasks.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { updateTasks } from \"../store/taskSlice\";\nimport AddTask from \"./AddTask\";\nimport Alert from \"./Alert\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowTasks(_ref) {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const user = useSelector(state => state.userObj.userObj);\n  const allTasks = useSelector(state => state.allTasks.allTasks);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    project\n  } = location.state;\n  const [clicked, setClicked] = useState(false);\n  const [msg, setMsg] = useState(null);\n  console.log(\"task is in show task \", task);\n\n  const onDelete = async () => {\n    let val = window.confirm(\"Are you sure You want to delete the task\");\n    const data = {\n      userID: user._id,\n      projectID: project._id,\n      taskID: task._id,\n      position: user.position\n    };\n\n    if (val) {\n      const response = await axios.post(\"http://localhost:5000/user/delete-tasks\", data);\n      console.log(\"confirm msg\", response.data);\n\n      if (response.data.status === \"success\") {\n        console.log(\"after successful deletion of tasks data is \", response.data.tasks);\n        dispatch(updateTasks({\n          projectID: project._id,\n          tasks: response.data.tasks\n        }));\n      } else {\n        setMsg(response.data.msg);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const url = \"http://localhost:5000/user/get-tasks/?userID=\" + user._id + \"&projectID=\" + project._id + \"&position=\" + user.position;\n      const response = await axios.get(url);\n\n      if (response.data.status === \"success\") {\n        console.log(\" show tasks all tasks are.. \", response.data.tasks);\n        dispatch(updateTasks({\n          projectID: project._id,\n          tasks: response.data.tasks\n        }));\n      } else {\n        console.log(\"all tasks are \", response.data.tasks);\n        setMsg(response.data.msg);\n      }\n    };\n\n    getTasks();\n  }, []); // {task.priority} || task: {task.task} || status:{\" \"}\n  //{task.status}{\" \"}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [msg ? /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(Draggable, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"label\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), task.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"label\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"label\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), task.task]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), !clicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",\n            onClick: () => {\n              setClicked(true);\n            },\n            children: [\" \", \"Edit\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-white bg-red-500   font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 \",\n            onClick: onDelete,\n            children: [\" \", \"Delete\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), clicked ? /*#__PURE__*/_jsxDEV(AddTask, {\n          setClicked: setClicked,\n          originalTask: task,\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowTasks, \"6q1KJ2MjE++9e1kOOsTC4ciz/+w=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useLocation];\n});\n\n_c = ShowTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowTasks\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowTasks.js"],"names":["axios","React","useEffect","useState","useSelector","useDispatch","useLocation","updateTasks","AddTask","Alert","Draggable","ShowTasks","task","user","state","userObj","allTasks","dispatch","location","project","clicked","setClicked","msg","setMsg","console","log","onDelete","val","window","confirm","data","userID","_id","projectID","taskID","position","response","post","status","tasks","getTasks","url","get","priority"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { updateTasks } from \"../store/taskSlice\";\r\nimport AddTask from \"./AddTask\";\r\nimport Alert from \"./Alert\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nexport default function ShowTasks({ task }) {\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  const allTasks = useSelector((state) => state.allTasks.allTasks);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { project } = location.state;\r\n  const [clicked, setClicked] = useState(false);\r\n  const [msg, setMsg] = useState(null);\r\n  console.log(\"task is in show task \", task);\r\n\r\n  const onDelete = async () => {\r\n    let val = window.confirm(\"Are you sure You want to delete the task\");\r\n    const data = {\r\n      userID: user._id,\r\n      projectID: project._id,\r\n      taskID: task._id,\r\n      position: user.position,\r\n    };\r\n    if (val) {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/user/delete-tasks\",\r\n        data\r\n      );\r\n      console.log(\"confirm msg\", response.data);\r\n      if (response.data.status === \"success\") {\r\n        console.log(\r\n          \"after successful deletion of tasks data is \",\r\n          response.data.tasks\r\n        );\r\n        dispatch(\r\n          updateTasks({ projectID: project._id, tasks: response.data.tasks })\r\n        );\r\n      } else {\r\n        setMsg(response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const url =\r\n        \"http://localhost:5000/user/get-tasks/?userID=\" +\r\n        user._id +\r\n        \"&projectID=\" +\r\n        project._id +\r\n        \"&position=\" +\r\n        user.position;\r\n      const response = await axios.get(url);\r\n      if (response.data.status === \"success\") {\r\n        console.log(\" show tasks all tasks are.. \", response.data.tasks);\r\n        dispatch(\r\n          updateTasks({ projectID: project._id, tasks: response.data.tasks })\r\n        );\r\n      } else {\r\n        console.log(\"all tasks are \", response.data.tasks);\r\n        setMsg(response.data.msg);\r\n      }\r\n    };\r\n    getTasks();\r\n  }, []);\r\n  // {task.priority} || task: {task.task} || status:{\" \"}\r\n  //{task.status}{\" \"}\r\n  return (\r\n    <div>\r\n      <div>\r\n        {msg ? <Alert /> : <div></div>}\r\n        <Draggable>\r\n          <div className=\"\">\r\n            <div>\r\n              <label htmlFor=\"label\">Priority</label>\r\n              {task.priority}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"label\">Status</label>\r\n              {task.status}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"label\">Task</label>\r\n              {task.task}\r\n            </div>\r\n          </div>\r\n\r\n          {!clicked ? (\r\n            <div>\r\n              <button\r\n                className=\"text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\"\r\n                onClick={() => {\r\n                  setClicked(true);\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Edit{\" \"}\r\n              </button>\r\n              <button\r\n                className=\"text-white bg-red-500   font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 \"\r\n                onClick={onDelete}\r\n              >\r\n                {\" \"}\r\n                Delete{\" \"}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div> </div>\r\n          )}\r\n\r\n          {clicked ? (\r\n            <AddTask\r\n              setClicked={setClicked}\r\n              originalTask={task}\r\n              project={project}\r\n            />\r\n          ) : (\r\n            <div> </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}