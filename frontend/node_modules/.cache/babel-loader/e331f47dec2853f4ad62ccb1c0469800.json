{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowAllEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowAllEmployee(_ref) {\n  _s();\n\n  let {\n    user,\n    collectUsers\n  } = _ref;\n  const ImagePath = \"http://localhost:5000/profile-pic/\";\n  console.log(\"in child\");\n  const [arrayOfSelectedUsers, setArrayOfSelectedUsers] = useState([]); // here collectUsers is a function sent from parent to child\n  // i am updating this function with current selected list of users.\n  // and sending back this list to parent component.\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked(!checked);\n\n    if (checked) {\n      if (!arrayOfSelectedUsers.includes(user._id)) {\n        let copy = [...arrayOfSelectedUsers];\n        copy.push(user._id);\n        setArrayOfSelectedUsers(copy);\n        console.log(\"user added\"); // updating selected user list for parent\n\n        collectUsers(arrayOfSelectedUsers);\n      }\n\n      console.log(\"selected users\", arrayOfSelectedUsers);\n    } else {\n      if (arrayOfSelectedUsers.includes(user._id)) {\n        let copy = [...arrayOfSelectedUsers];\n        let index = copy.indexOf(user._id);\n        delete copy[index];\n        console.log(\"user deleted\");\n        setArrayOfSelectedUsers(copy); // updating selected user list for parent\n\n        collectUsers(arrayOfSelectedUsers);\n      }\n\n      console.log(\"selected users\", arrayOfSelectedUsers);\n    }\n  };\n\n  console.log(\"value of check is \", checked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ImagePath + user.pic,\n        alt: \"loading\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"not uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.name,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.email,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowAllEmployee, \"ejyM3+m8BrUGkVPh50EpRe7Bb5I=\");\n\n_c = ShowAllEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAllEmployee\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowAllEmployee.js"],"names":["React","useState","ShowAllEmployee","user","collectUsers","ImagePath","console","log","arrayOfSelectedUsers","setArrayOfSelectedUsers","checked","setChecked","handleChange","includes","_id","copy","push","index","indexOf","pic","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,eAAT,OAAiD;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAwB;AAC9D,QAAMC,SAAS,GAAG,oCAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,EAAD,CAAhE,CAH8D,CAK9D;AACA;AACA;;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMW,YAAY,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,QAAIA,OAAJ,EAAa;AACX,UAAI,CAACF,oBAAoB,CAACK,QAArB,CAA8BV,IAAI,CAACW,GAAnC,CAAL,EAA8C;AAC5C,YAAIC,IAAI,GAAG,CAAC,GAAGP,oBAAJ,CAAX;AACAO,QAAAA,IAAI,CAACC,IAAL,CAAUb,IAAI,CAACW,GAAf;AACAL,QAAAA,uBAAuB,CAACM,IAAD,CAAvB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAJ4C,CAK5C;;AACAH,QAAAA,YAAY,CAACI,oBAAD,CAAZ;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,oBAA9B;AACD,KAVD,MAUO;AACL,UAAIA,oBAAoB,CAACK,QAArB,CAA8BV,IAAI,CAACW,GAAnC,CAAJ,EAA6C;AAC3C,YAAIC,IAAI,GAAG,CAAC,GAAGP,oBAAJ,CAAX;AACA,YAAIS,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAaf,IAAI,CAACW,GAAlB,CAAZ;AACA,eAAOC,IAAI,CAACE,KAAD,CAAX;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAE,QAAAA,uBAAuB,CAACM,IAAD,CAAvB,CAL2C,CAO3C;;AACAX,QAAAA,YAAY,CAACI,oBAAD,CAAZ;AACD;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,oBAA9B;AACD;AACF,GAzBD;;AA0BAF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,OAAlC;AACA,sBACE;AAAA,2BACE;AAAA,iBACGP,IAAI,CAACgB,GAAL,gBACC;AACE,QAAA,GAAG,EAAEd,SAAS,GAAGF,IAAI,CAACgB,GADxB;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,MAAM,EAAC,IAHT;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAWE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEhB,IAAI,CAACiB,IAA/B;AAAqC,QAAA,QAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEjB,IAAI,CAACkB,KAA/B;AAAsC,QAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEX,OAAhC;AAAyC,QAAA,QAAQ,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAAUT,IAAI,CAACW,GAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAzDuBZ,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ShowAllEmployee({ user, collectUsers }) {\r\n  const ImagePath = \"http://localhost:5000/profile-pic/\";\r\n  console.log(\"in child\");\r\n  const [arrayOfSelectedUsers, setArrayOfSelectedUsers] = useState([]);\r\n\r\n  // here collectUsers is a function sent from parent to child\r\n  // i am updating this function with current selected list of users.\r\n  // and sending back this list to parent component.\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n    if (checked) {\r\n      if (!arrayOfSelectedUsers.includes(user._id)) {\r\n        let copy = [...arrayOfSelectedUsers];\r\n        copy.push(user._id);\r\n        setArrayOfSelectedUsers(copy);\r\n        console.log(\"user added\");\r\n        // updating selected user list for parent\r\n        collectUsers(arrayOfSelectedUsers);\r\n      }\r\n      console.log(\"selected users\", arrayOfSelectedUsers);\r\n    } else {\r\n      if (arrayOfSelectedUsers.includes(user._id)) {\r\n        let copy = [...arrayOfSelectedUsers];\r\n        let index = copy.indexOf(user._id);\r\n        delete copy[index];\r\n        console.log(\"user deleted\");\r\n        setArrayOfSelectedUsers(copy);\r\n\r\n        // updating selected user list for parent\r\n        collectUsers(arrayOfSelectedUsers);\r\n      }\r\n      console.log(\"selected users\", arrayOfSelectedUsers);\r\n    }\r\n  };\r\n  console.log(\"value of check is \", checked);\r\n  return (\r\n    <div>\r\n      <div key={user._id}>\r\n        {user.pic ? (\r\n          <img\r\n            src={ImagePath + user.pic}\r\n            alt=\"loading\"\r\n            height=\"50\"\r\n            width=\"50\"\r\n          />\r\n        ) : (\r\n          <div>not uploaded</div>\r\n        )}\r\n        <input type=\"text\" value={user.name} readOnly />\r\n        <input type=\"text\" value={user.email} readOnly />\r\n        <input type=\"checkbox\" checked={checked} onChange={handleChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}