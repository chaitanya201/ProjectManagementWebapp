{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowSingleProject.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectMembers from \"./ProjectMembers\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport ShowUsersToSelectForProject from \"./ShowUsersToSelectForProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowSingleProject() {\n  _s();\n\n  // accessing the value from link component using useLocation hook\n  const location = useLocation();\n  const {\n    project,\n    users\n  } = location.state;\n  console.log(\"location state\", location.state);\n  const [msg, setMsg] = useState(null);\n  const [title, setTitle] = useState(project.name);\n  const [desc, setDesc] = useState(project.desc);\n  const [head, setHead] = useState(project.head);\n  const [members, setMembers] = useState(project.members);\n  const [status, setStatus] = useState(project.status);\n  let totalMembers = [];\n  const [totalEmployee, setTotalEmployee] = useState(users);\n  const arrOfEmpID = []; // for (let index = 0; index < totalEmployee.length; index++) {\n  //     arrOfEmpID.push(totalEmployee[index]._id)\n  // }\n\n  const navigate = useNavigate();\n\n  for (let index = 0; index < members.length; index++) {\n    totalMembers.push(members[index]._id);\n  }\n\n  console.log(\"current members are \", totalMembers);\n  console.log(\"total users are \", users);\n\n  const onFormSubmit = async event => {\n    const currentMembers = [];\n\n    for (let index = 0; index < totalMembers.length; index++) {\n      if (totalMembers[index]) {\n        currentMembers.push(totalMembers[index]);\n      }\n    }\n\n    for (let index = 0; index < arrOfEmpID.length; index++) {\n      if (totalMembers[index]) {\n        currentMembers.push(arrOfEmpID[index]);\n      }\n    }\n\n    if (currentMembers.length <= 0) {\n      console.log(\"setting the msg \");\n      return setMsg(\"Select at least one member\");\n    }\n\n    console.log(\"msg is \", msg);\n    console.log(\"in form all members \", totalMembers);\n    event.preventDefault();\n    const newProject = {\n      _id: project._id,\n      name: title,\n      desc,\n      head,\n      members: currentMembers,\n      status\n    }; // saving all the data \n\n    const response = axios.post(\"http://localhost:5000/user/update-project\", newProject);\n    console.log(\"response data is \", (await response).data);\n\n    if ((await response).data) {\n      setMsg(\"success\");\n    } else {\n      setMsg(\"failed\");\n    }\n\n    navigate(\"/update-project\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [msg, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/user-home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fhs\",\n      children: \"Title: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: desc,\n        onChange: event => {\n          setDesc(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Project Head: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: head,\n        onChange: event => setHead(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: status,\n        onChange: event => setStatus(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), members ? members.map(user => {\n        return /*#__PURE__*/_jsxDEV(ProjectMembers, {\n          user: user,\n          setMembers: totalMembers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No members are allocated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), users ? users.map(user => {\n        return /*#__PURE__*/_jsxDEV(ShowUsersToSelectForProject, {\n          user: user,\n          totalEmployee: arrOfEmpID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No users found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"update project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowSingleProject, \"YSSE6EiqOeYrRAUC9SNI6sSggd0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = ShowSingleProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSingleProject\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowSingleProject.js"],"names":["React","Link","ProjectMembers","useLocation","useState","axios","useNavigate","ShowUsersToSelectForProject","ShowSingleProject","location","project","users","state","console","log","msg","setMsg","title","setTitle","name","desc","setDesc","head","setHead","members","setMembers","status","setStatus","totalMembers","totalEmployee","setTotalEmployee","arrOfEmpID","navigate","index","length","push","_id","onFormSubmit","event","currentMembers","preventDefault","newProject","response","post","data","target","value","map","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectMembers from \"./ProjectMembers\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ShowUsersToSelectForProject from \"./ShowUsersToSelectForProject\";\r\n\r\n\r\nexport default function ShowSingleProject() {\r\n  // accessing the value from link component using useLocation hook\r\n  const location = useLocation();\r\n  const { project, users } = location.state;\r\n  console.log(\"location state\", location.state);\r\n  const [msg, setMsg] = useState(null);\r\n  const [title, setTitle] = useState(project.name);\r\n  const [desc, setDesc] = useState(project.desc);\r\n  const [head, setHead] = useState(project.head);\r\n  const [members, setMembers] = useState(project.members);\r\n  const [status, setStatus] = useState(project.status);\r\n  let totalMembers = [];\r\n    const [totalEmployee, setTotalEmployee] = useState(users);\r\n    const arrOfEmpID = []\r\n    // for (let index = 0; index < totalEmployee.length; index++) {\r\n    //     arrOfEmpID.push(totalEmployee[index]._id)\r\n        \r\n    // }\r\n  const navigate = useNavigate()\r\n  for (let index = 0; index < members.length; index++) {\r\n    totalMembers.push(members[index]._id);\r\n  }\r\n  console.log(\"current members are \", totalMembers);\r\n  console.log(\"total users are \", users);\r\n  const onFormSubmit = async (event) => {\r\n\r\n    const currentMembers = []\r\n    for (let index = 0; index < totalMembers.length; index++) {\r\n        if(totalMembers[index]) {\r\n            currentMembers.push(totalMembers[index])\r\n        }\r\n    }\r\n\r\n    for (let index = 0; index < arrOfEmpID.length; index++) {\r\n        if(totalMembers[index]) {\r\n            currentMembers.push(arrOfEmpID[index])\r\n        }\r\n    }\r\n\r\n    if(currentMembers.length <= 0) {\r\n        console.log(\"setting the msg \");\r\n        return setMsg(\"Select at least one member\")\r\n    }\r\n\r\n\r\n    console.log(\"msg is \", msg);\r\n    console.log(\"in form all members \", totalMembers);\r\n    event.preventDefault();\r\n    const newProject = {\r\n        _id: project._id,\r\n      name: title,\r\n      desc,\r\n      head,\r\n      members: currentMembers,\r\n      status\r\n    };\r\n\r\n    // saving all the data \r\n    const response = axios.post(\"http://localhost:5000/user/update-project\", newProject)\r\n    console.log(\"response data is \", (await response).data);\r\n    if((await response).data) {\r\n        setMsg(\"success\")\r\n    } else {\r\n        setMsg(\"failed\")\r\n    }\r\n    navigate(\"/update-project\")\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <h1>{msg} </h1>\r\n      <Link to=\"/user-home\">Home</Link>\r\n      <br />\r\n      <label htmlFor=\"fhs\">Title: </label>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(event) => {\r\n            setTitle(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(event) => {\r\n            setDesc(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Project Head: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={head}\r\n          onChange={(event) => setHead(event.target.value)}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Status: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={status}\r\n          onChange={(event) => setStatus(event.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <h2>Project Members</h2>\r\n        {members ? (\r\n          members.map((user) => {\r\n            return <ProjectMembers user={user} setMembers={totalMembers} />;\r\n          })\r\n        ) : (\r\n          <div>No members are allocated</div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <h2>Other Employees</h2>\r\n        {\r\n            users? users.map((user) => {\r\n                return <ShowUsersToSelectForProject user = {user} totalEmployee={arrOfEmpID} />\r\n            }) : <div>No users found</div>\r\n        }\r\n        <input type=\"submit\" value=\"update project\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}