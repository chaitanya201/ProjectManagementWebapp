[{"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\index.js":"1","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\reportWebVitals.js":"2","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\App.js":"3","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Register.js":"4","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Login.js":"5","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\store.js":"6","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\userObjSlice.js":"7","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\userLoginSlice.js":"8","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserProfile.js":"9","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\PageNotFound.js":"10","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserHome.js":"11","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\AssignProjects.js":"12","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowAllEmployee.js":"13","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowAllProjectsOfUser.js":"14","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UpdateProjectStatus.js":"15","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\RenderProjectMembers.js":"16","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowProjects.js":"17","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowSingleProject.js":"18","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ProjectMembers.js":"19","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowUsersToSelectForProject.js":"20","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Navbar.js":"21","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Alert.js":"22","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowProjectStatus.js":"23","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserProjectStatus.js":"24","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserSingleProject.js":"25","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ViewProject.js":"26","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\AddTask.js":"27","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowTasks.js":"28","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\taskSlice.js":"29"},{"size":553,"mtime":1646367735448,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1645334176180,"results":"32","hashOfConfig":"31"},{"size":3001,"mtime":1647165415688,"results":"33","hashOfConfig":"31"},{"size":4532,"mtime":1646941713348,"results":"34","hashOfConfig":"31"},{"size":3133,"mtime":1646943326420,"results":"35","hashOfConfig":"31"},{"size":341,"mtime":1647176421375,"results":"36","hashOfConfig":"31"},{"size":444,"mtime":1646483854196,"results":"37","hashOfConfig":"31"},{"size":393,"mtime":1646373728551,"results":"38","hashOfConfig":"31"},{"size":5377,"mtime":1646981948188,"results":"39","hashOfConfig":"31"},{"size":120,"mtime":1646375579427,"results":"40","hashOfConfig":"31"},{"size":2123,"mtime":1647175371947,"results":"41","hashOfConfig":"31"},{"size":6126,"mtime":1646983670349,"results":"42","hashOfConfig":"31"},{"size":1744,"mtime":1646982119288,"results":"43","hashOfConfig":"31"},{"size":1543,"mtime":1647177814845,"results":"44","hashOfConfig":"31"},{"size":1748,"mtime":1646992853264,"results":"45","hashOfConfig":"31"},{"size":527,"mtime":1646978779689,"results":"46","hashOfConfig":"31"},{"size":1555,"mtime":1647164466459,"results":"47","hashOfConfig":"31"},{"size":7034,"mtime":1647162567397,"results":"48","hashOfConfig":"31"},{"size":1098,"mtime":1646979891792,"results":"49","hashOfConfig":"31"},{"size":1013,"mtime":1646981139728,"results":"50","hashOfConfig":"31"},{"size":9240,"mtime":1647333112342,"results":"51","hashOfConfig":"31"},{"size":1088,"mtime":1646985368621,"results":"52","hashOfConfig":"31"},{"size":1653,"mtime":1646991072034,"results":"53","hashOfConfig":"31"},{"size":1300,"mtime":1647141928410,"results":"54","hashOfConfig":"31"},{"size":6831,"mtime":1647431422367,"results":"55","hashOfConfig":"31"},{"size":594,"mtime":1647176197824,"results":"56","hashOfConfig":"31"},{"size":5468,"mtime":1647325836832,"results":"57","hashOfConfig":"31"},{"size":4189,"mtime":1647430547062,"results":"58","hashOfConfig":"31"},{"size":831,"mtime":1647236919953,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"14b1m2f",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"63"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"63"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\index.js",[],[],["160","161"],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\App.js",["162","163"],[],"import Register from \"./components/Register\";\nimport {BrowserRouter, Route, Routes, Link} from 'react-router-dom'\nimport Login from \"./components/Login\";\nimport Profile from \"./components/UserProfile\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport { useSelector } from \"react-redux\";\nimport UserHome from \"./components/UserHome\";\nimport AssignProjects from \"./components/AssignProjects\";\nimport UpdateProjectStatus from \"./components/UpdateProjectStatus\";\nimport ShowSingleProject from \"./components/ShowSingleProject\";\nimport Navbar from \"./components/Navbar\";\nimport ShowProjectStatus from \"./components/ShowProjectStatus\";\nimport UserProjectStatus from \"./components/UserProjectStatus\";\nimport ViewProject from \"./components/ViewProject\";\n\nfunction App() {\n  const loginStatus = useSelector((state) => state.userLoginInfo.isLoggedIn)\n  // getting current path in the url \n  // to check whether path is login or register\n  const currentPathName = window.location.href;\n  return (\n    <BrowserRouter>\n    {/* {\n      currentPathName === \"http://localhost:3000/login\" || currentPathName === \"http://localhost:3000/register\" ?\n      <div></div> :\n      <Navbar />\n    } */}\n      {\n        loginStatus ? <Navbar /> : <div></div>\n      }\n      <Routes>\n        <Route path=\"/register\" element={<Register />} > </Route>\n        <Route path=\"login\" element={<Login />} ></Route>\n        {/* <Route path=\"/profile\" element={<Profile />} ></Route> */}\n        { loginStatus ?\n          <Route path=\"/user-home\" element={<UserHome />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/create-project\" element={<AssignProjects />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/user-profile\" element={<Profile />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/update-project\" element={<UpdateProjectStatus />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/show-single-project\" element={<ShowSingleProject />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/show-project-status\" element={<ShowProjectStatus />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/show-user-project-status\" element={<UserProjectStatus />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        { loginStatus ?\n          <Route path=\"/show-tasks\" element={<ViewProject />} ></Route> :\n          <Route path=\"/login\" element={<Login />} ></Route>\n        }\n        <Route path=\"*\" element={<PageNotFound />}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Register.js",["164","165"],[],"import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {changeLoginState} from '../store/userLoginSlice'\r\nimport {updateUser} from '../store/userObjSlice'\r\nimport Alert from './Alert'\r\n\r\n// Register component\r\nexport default function Register() {\r\n\r\n    const navigate = useNavigate() // creating navigate object\r\n\r\n    // using login and usr\r\n    const currentLoginStatus = useSelector((state) => state.userLoginInfo.isLoggedIn)\r\n    // here in state.Name \r\n    // in Name we have to write the same name as in store file\r\n    console.log(\"initial login status is \", currentLoginStatus);\r\n\r\n    const userAfterLogin = useSelector((state) => state.userObj.userObj)\r\n\r\n    // creating dispatch object\r\n    const dispatch = useDispatch()\r\n\r\n    // declaring variables to store user info\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [mobile, setMobile] = useState(3);\r\n\r\n    // collecting user info\r\n    const changeName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const changeEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const changeMobile = (event) => {\r\n        setMobile(event.target.value)\r\n    }\r\n    const changePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    // alert part\r\n    const [alertMsg, setAlertMsg] = useState(null);\r\n    const alterMsgColor= \"red\"\r\n    // defining what would happen after form submission\r\n    const onFormSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if(!name.trim()) {\r\n            setAlertMsg(\"Provide Valid name\")\r\n            return\r\n        }\r\n        if(password.length < 8) {\r\n            setAlertMsg(\"Password length is less than 8\")\r\n            return\r\n        }\r\n        const user = {\r\n            name: name.trim(),\r\n            email: email.trim(),\r\n            password: password.trim(),\r\n            mobile: mobile\r\n        }\r\n        const response = await axios.post(\"http://localhost:5000/user/register\", user);\r\n        console.log(\"after registrations in form function\");\r\n        if (response.data.status === \"success\") {\r\n            console.log(\"registration is successful in same function\");\r\n            \r\n            dispatch(changeLoginState(true));\r\n            dispatch(updateUser(response.data.user));\r\n            console.log(\"this is the user after login \", );\r\n            navigate(\"/login\")\r\n        } else {\r\n            console.log(\"registration failed\", response.data.msg);\r\n            const msg = response.data.msg\r\n            setAlertMsg(msg)\r\n            console.log(\"alert msg is \", alertMsg);\r\n        }\r\n        \r\n    }\r\n    // console.log(\"rsp \", response.data);\r\n    // if (currentLoginStatus) {\r\n    //     console.log(\"registration is successful ..\");\r\n    //     return <Navigate to='/login' />\r\n        \r\n    // }\r\n    return (\r\n        <div>\r\n        { alertMsg ? <Alert msg={alertMsg} alertColor={alterMsgColor} /> : <div> </div>}\r\n        <div className='w-full max-w-md m-auto bg-white rounded-lg border border-primaryBorder shadow-default py-10 px-16'>\r\n                <h1 className='text-2xl font-medium text-primary mt-4 mb-12 text-center'>Register</h1>\r\n                <form method=\"post\" onSubmit={onFormSubmit}>\r\n                    <input type=\"text\" name='name' required placeholder='Name' onChange={changeName} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\" />\r\n                    <input type=\"email\" name='email' required placeholder='Email' onChange={changeEmail} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\"/>\r\n                    <input type=\"number\" name='mobile' required placeholder='Mobile' onChange={changeMobile} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\" />\r\n                    <input type=\"password\" name='password' placeholder='Password' required onChange={changePassword} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\" />\r\n                    <input type=\"submit\" value=\"Register\" className=\"w-full px-6 py-2 mt-4 text-white bg-emerald-600 rounded-lg hover:bg-blue-900\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Login.js",["166","167"],[],"\r\nimport React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {changeLoginState} from '../store/userLoginSlice'\r\nimport {updateUser} from '../store/userObjSlice'\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport Alert from './Alert'\r\nexport default function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const currentLoginStatus = useSelector((state) => state.userLoginInfo.isLoggedIn)\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [alertMsg, setAlertMsg] = useState(null);\r\n    const alterMsgColor= \"red\"\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const onFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            email:email,\r\n            password: password\r\n        }\r\n        const response = await axios.post(\"http://localhost:5000/user/login\", user);\r\n        \r\n        if(response.data.status === \"success\"){\r\n            console.log(\"data after login is \", response.data.user);\r\n            dispatch(changeLoginState(true));\r\n            dispatch(updateUser(response.data.user))\r\n            navigate(\"/user-home\")\r\n        } else {\r\n            console.log(\"failed to login\");\r\n            setAlertMsg(\"Email or Password is incorrect\")\r\n        }\r\n    }\r\n    // if(currentLoginStatus) {\r\n    //     console.log(\"login is success\");\r\n    //     return <Navigate to=\"/profile\" replace={true} />\r\n    // }\r\n\r\n\r\n\r\n    // using \"navigate(path)\" i can directly navigate to other paths without using return statements and from any function.\r\n    // so i can navigate from any function to any page without using return statement.\r\n    // \r\n    return (\r\n    <div>\r\n    { alertMsg ? <Alert msg={alertMsg} alertColor={alterMsgColor} /> : <div> </div>}\r\n        <div className='h-screen flex bg-gray-100'>\r\n        \r\n        <div className='w-full max-w-md m-auto bg-white rounded-lg border border-primaryBorder shadow-default py-10 px-16'>\r\n            <h1 className='text-2xl font-medium text-primary mt-4 mb-12 text-center'>Login 🔐</h1>\r\n            <form method='post' onSubmit={onFormSubmit} >\r\n                <input type=\"email\" name='email' placeholder='Email' onChange={onEmailChange} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\" />\r\n                <br />\r\n                <input type=\"password\" name='password' placeholder='Password' onChange={onPasswordChange} className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\"/>\r\n                <div className='flex justify-center items-center mt-6'>\r\n                    <input type=\"submit\" value='Login' className=\"w-full px-6 py-2 mt-4 text-white bg-emerald-600 rounded-lg hover:bg-blue-900\" /> \r\n\r\n                </div>\r\n            </form> \r\n        </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\store.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\userObjSlice.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\userLoginSlice.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserProfile.js",["168","169","170","171"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { changeLoginState } from \"../store/userLoginSlice\";\r\nimport { updateUser } from \"../store/userObjSlice\";\r\nimport Alert from \"./Alert\";\r\n\r\nexport default function UserProfile() {\r\n  const dispatch = useDispatch(); // creating object of dispatch using useDispatch()\r\n  const navigate = useNavigate(); // creating object of navigate using useNavigate()\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  const currentLoginStatus = useSelector(\r\n    (state) => state.userLoginInfo.isLoggedIn\r\n  );\r\n  console.log(\"current login status is \", currentLoginStatus);\r\n  const logOut = () => {\r\n    dispatch(changeLoginState(false));\r\n    dispatch(updateUser({}));\r\n    navigate(\"/login\");\r\n  };\r\n  // creating variables to store the personal info of users\r\n  let msg = null;\r\n  let [name, setName] = useState(user.name);\r\n  let [email, setEmail] = useState(user.email);\r\n  let [mobile, setMobile] = useState(user.mobile);\r\n  const [image, setImage] = useState(user.pic);\r\n  console.log(\"name is \", name);\r\n  console.log(\"image is \", image);\r\n\r\n  const [alertMsg, setAlertMsg] = useState(null);\r\n  const [alterMsgColor, setAlterMsgColor] = useState(\"emerald\");\r\n  // creating useState hook for file upload\r\n\r\n  // creating onchange function for image change\r\n  const onImageChange = (event) => {\r\n    console.log(\"value of image is \", event.target.value);\r\n    setImage(event.target.files[0]);\r\n  };\r\n\r\n  // creating functions for name, email, mobile change\r\n  const onNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const onMobileChange = (event) => {\r\n    setMobile(event.target.value);\r\n  };\r\n\r\n  const ImagePath = \"http://localhost:5000/profile-pic/\";\r\n  const Image = \"http://localhost:5000/profile-pic/\" + user.pic;\r\n  // printing image\r\n  console.log(\"image is .....\", image);\r\n  // function for form submit\r\n  const formSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (name && email && mobile) {\r\n      name = name.trim();\r\n      email = email.trim();\r\n      let data = new FormData();\r\n      data.append(\"myFile\", image);\r\n      data.append(\"name\", name);\r\n      data.append(\"email\", email);\r\n      data.append(\"mobile\", mobile);\r\n      data.append(\"userEmail\", user.email);\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/user/edit-profile/\",\r\n        data\r\n      );\r\n      if (response.data) {\r\n        dispatch(updateUser(response.data.user));\r\n        setAlertMsg(\"Profile Updated\");\r\n        console.log(\"msg is \", alertMsg);\r\n        console.log(\"user after updating is \", response.data.user);\r\n        // navigate(\"/user-home\")\r\n      } else {\r\n        setAlertMsg(\"Failed to update profile\");\r\n        setAlterMsgColor(\"red\");\r\n      }\r\n    } else {\r\n      msg = \"all the fields are required\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid justify-items-center\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-medium text-primary mt-4 mb-12 text-center\">\r\n          Edit section\r\n        </h1>\r\n        {alertMsg ? (\r\n          <Alert msg={alertMsg} alertColor={alterMsgColor} />\r\n        ) : (\r\n          <div> </div>\r\n        )}\r\n        <div className=\"max-w-sm w-full lg:max-w-full lg:flex m-auto  \">\r\n          <br />\r\n          {user.pic ? (\r\n            <div\r\n              className=\"h-80 lg:h-auto lg:w-80 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\r\n              style={{ backgroundImage: 'url(\"' + Image + '\")' }}\r\n              title=\"Woman holding a mug\"\r\n            ></div>\r\n          ) : (\r\n            <div>Photo is not uploaded</div>\r\n          )}\r\n\r\n          <form onSubmit={formSubmit} method=\"post\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={onNameChange}\r\n              required\r\n              className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n            />{\" \"}\r\n            <br />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onEmailChange}\r\n              required\r\n              className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n            />{\" \"}\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              name=\"mobile\"\r\n              value={mobile}\r\n              onChange={onMobileChange}\r\n              required\r\n              className=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600\"\r\n            />{\" \"}\r\n            <br />\r\n            <input\r\n              type=\"file\"\r\n              alt=\"select profile image\"\r\n              name=\"profilePic\"\r\n              onChange={onImageChange}\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Save Changes\"\r\n              className=\"w-full px-6 py-2 mt-4 text-white bg-pink-600 rounded-lg \"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\PageNotFound.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserHome.js",["172"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ShowAllProjectsOfUser from \"./ShowAllProjectsOfUser\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function UserHome() {\r\n  const [allProjects, setAllProjects] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  const [taskAdded, setTaskAdded] = useState(true);\r\n  //   // logout function\r\n  //   const logOut = () => {\r\n  //     dispatch(changeLoginState(false))\r\n  //     dispatch(updateUser({}))\r\n  //     navigate(\"/login\")\r\n  // }\r\n\r\n  // using useEffect\r\n\r\n  useEffect(() => {\r\n    console.log(\"this is user home\");\r\n    const getData = async () => {\r\n      console.log(\"user is user\", user);\r\n      // const data = new FormData();\r\n      // data.append(\"_id\", user._id);\r\n      const result = await axios.get(\r\n        \"http://localhost:5000/user/get-all-projects/?_id=\" + user._id + \"&permission=\"+ user.position\r\n      );\r\n      console.log(result.data.msg);\r\n      console.log(\"this is user home\");\r\n      console.log(\"loading setting \", loading);\r\n      setLoading(false);\r\n      if (result.data.status === \"success\") {\r\n        setAllProjects(result.data.allProjects);\r\n        setTaskAdded(false)\r\n        console.log(\"data of projects fetched successfully\");\r\n        console.log(result.data);\r\n      } else {\r\n        console.log(\"failed to get data of projects\");\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, [loading, user]);\r\n  // alert(user)\r\n  console.log(\"all projects\", allProjects);\r\n  return (\r\n    <div>\r\n      \r\n      <h3 className=\" flex justify-center text-2xl\">All Projects</h3>\r\n      {loading ? (\r\n        <div>Loading.....</div>\r\n      ) : allProjects ? (\r\n        allProjects.map((value) => {\r\n          return (\r\n            <div key={value._id}>\r\n              <ShowAllProjectsOfUser project={value} setTaskAdded={setTaskAdded} />\r\n              <br />\r\n              \r\n            </div>\r\n          )\r\n        })\r\n      ) : (\r\n        <div>No project is assigned yet</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\AssignProjects.js",["173","174"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShowAllEmployee from \"./ShowAllEmployee\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Alert from \"./Alert\";\r\nexport default function AssignProjects() {\r\n  // creating state variables\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [projectHead, setProjectHead] = useState(\"\");\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  // creating onchange events\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const onDescChange = (event) => {\r\n    setDesc(event.target.value);\r\n  };\r\n  const onProjectHeadChange = (event) => {\r\n    setProjectHead(event.target.value);\r\n  };\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n  // using useEffect react hook\r\n  // this hook runs before even react component renders\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/user/getUsers\").then((result) => {\r\n      console.log(\"this method is called\");\r\n      setAllUsers(result.data.users);\r\n    });\r\n  }, []);\r\n  console.log(\"all fetched usrs\", allUsers);\r\n  // using this function i am collecting all the selected users from the child component(ShowAllEmployee)\r\n  const getSelectedUsers = (selectedUsersFromChildComponent) => {\r\n    setSelectedUsers(selectedUsersFromChildComponent);\r\n  };\r\n\r\n  // return selected users\r\n  const returnSelectedUsers = () => {\r\n    return selectedUsers;\r\n  };\r\n\r\n  const [alertMsg, setAlertMsg] = useState(null);\r\n  let alterMsgColor = \"red\";\r\n  // on form submit\r\n  const onFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // in arr i am filtering all invalid _id like undefined which comes from frontend\r\n    console.log(\"length \", selectedUsers.length);\r\n\r\n    let arr = [];\r\n    for (let index = 0; index < selectedUsers.length; index++) {\r\n      if (selectedUsers[index]) {\r\n        arr.push(selectedUsers[index]);\r\n      }\r\n    }\r\n    if (arr.length <= 0) {\r\n      setAlertMsg(\"Select at least one employee for project\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"final list of all selected users \", arr);\r\n    console.log(\"list of all selected  \", selectedUsers);\r\n    const project = {\r\n      title,\r\n      desc,\r\n      projectHead,\r\n      allUsers: arr,\r\n      userEmail: user.email,\r\n    };\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/user/add-project\",\r\n      project\r\n    );\r\n    if (response) {\r\n      if (response.data.status === \"success\") {\r\n        alterMsgColor = \"emerald\";\r\n        alert(\"success\");\r\n        setAlertMsg(response.data.msg);\r\n        console.log(\"success\");\r\n      } else {\r\n        setAlertMsg(response.data.msg);\r\n        alert(response.data.msg);\r\n      }\r\n    } else {\r\n      alert(\"failed\");\r\n      console.log(\"failed\");\r\n      setAlertMsg(\"Wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid justify-items-center\">\r\n      <h3>Create Project</h3>\r\n      {alertMsg ? (\r\n        <Alert msg={alertMsg} alertColor={alterMsgColor} />\r\n      ) : (\r\n        <div> </div>\r\n      )}\r\n      <br />\r\n      <form method=\"post\" onSubmit={onFormSubmit}>\r\n        <label htmlFor=\"title\">Project Title: </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"\r\n        form-control\r\n        block\r\n        w-64\r\n        px-3\r\n        py-1.5\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border border-solid border-gray-300\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n      \"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={onTitleChange}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"desc\">Project Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"desc\"\r\n          className=\"\r\n        form-control\r\n        block\r\n        w-full\r\n        px-3\r\n        py-1.5\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border border-solid border-gray-300\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n      \"\r\n          value={desc}\r\n          onChange={onDescChange}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"desc\">Project Head: </label>\r\n        <input\r\n          className=\"\r\n        form-control\r\n        block\r\n        w-full\r\n        px-3\r\n        py-1.5\r\n        text-base\r\n        font-normal\r\n        text-gray-700\r\n        bg-white bg-clip-padding\r\n        border border-solid border-gray-300\r\n        rounded\r\n        transition\r\n        ease-in-out\r\n        m-0\r\n        focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\r\n      \"\r\n          type=\"text\"\r\n          name=\"projectHead\"\r\n          value={projectHead}\r\n          onChange={onProjectHeadChange}\r\n        />\r\n        {/* here in map function \"return\" is necessary. without return it will not work */}\r\n        <div className=\"grid justify-items-center\">\r\n          <label htmlFor=\"all\">All Employees</label>\r\n          {allUsers ? (\r\n            allUsers.map(function (value, index) {\r\n              return (\r\n                <ShowAllEmployee\r\n                  user={value}\r\n                  collectUsers={getSelectedUsers}\r\n                  useCollectedUsers={returnSelectedUsers}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div>No data found</div>\r\n          )}\r\n          <input\r\n            type=\"submit\"\r\n            value=\"add project\"\r\n            className=\"text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\r\n          />\r\n        </div>\r\n      </form>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowAllEmployee.js",["175"],[],"import React, { useState } from \"react\";\r\n\r\nexport default function ShowAllEmployee({\r\n  user,\r\n  collectUsers,\r\n  useCollectedUsers,\r\n}) {\r\n  const ImagePath = \"http://localhost:5000/profile-pic/\";\r\n  // console.log(\"in child\");\r\n  // const [useCollectedUsers, setuseCollectedUsers] = useState([]);\r\n\r\n  // here collectUsers is a function sent from parent to child\r\n  // i am updating this function with current selected list of users.\r\n  // and sending back this list to parent component.\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n    console.log(\"checked value is \", checked);\r\n    console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\r\n  };\r\n  console.log(\"final value of check is \", checked);\r\n  let copy = useCollectedUsers();\r\n  if (checked) {\r\n    copy = [...copy];\r\n    if (!copy.includes(user._id)) {\r\n      copy.push(user._id);\r\n      console.log(\"user added \", copy);\r\n\r\n      collectUsers(copy);\r\n    }\r\n  } else {\r\n    if (copy.includes(user._id)) {\r\n      delete copy[copy.indexOf(user._id)];\r\n      // console.log(\"user deleted \", copy);\r\n      collectUsers(copy);\r\n    }\r\n  }\r\n  console.log(\"final array \", useCollectedUsers());\r\n  return (\r\n    <div >\r\n      <div>\r\n        {user.pic ? (\r\n          <img\r\n            src={ImagePath + user.pic}\r\n            alt=\"loading\"\r\n            height=\"50\"\r\n            width=\"50\"\r\n          />\r\n        ) : (\r\n          <div>not uploaded</div>\r\n        )}\r\n        <input type=\"text\" value={user.name} readOnly />\r\n        <input type=\"text\" value={user.email} readOnly />\r\n        <input type=\"checkbox\" checked={checked} onChange={handleChange} />\r\n      </div>\r\n      <hr />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowAllProjectsOfUser.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UpdateProjectStatus.js",["176","177","178","179"],[],"import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ShowProjects from './ShowProjects';\r\nexport default function UpdateProjectStatus() {\r\n    // setTitle, setDesc, setHead, setMembers\r\n    const user = useSelector((state) => state.userObj.userObj)\r\n    const [allProjects, setAllProjects] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    // creating states for changing title, des, head and members and\r\n    // passing them to child components\r\n    const [name, setName] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllProjects = async () => {\r\n            const projects = await axios.get(\"http://localhost:5000/user/get-projects-for-updation\")\r\n            if (projects.data.status === \"success\") {\r\n                setAllProjects(projects.data.allProjects)\r\n            }\r\n        }\r\n        getAllProjects()\r\n\r\n        const getAllUsers = async () => {\r\n            const res = await axios.get(\"http://localhost:5000/user/getUsers\")\r\n            if(res.data) {\r\n                if(res.data.status === \"success\") {\r\n                    setUsers(res.data.users)\r\n                }\r\n            }\r\n        }\r\n        getAllUsers()\r\n\r\n    }, [])\r\n    console.log(\"all projects\", allProjects);\r\n    console.log(\"all users\", users);\r\n\r\n  return (\r\n    <div>\r\n        <h1 className=\" flex justify-center text-2xl\">Update Projects</h1>\r\n        {\r\n            allProjects ? allProjects.length > 0 ? allProjects.map((project) => {\r\n            return <ShowProjects project={project} users = {users} key={project._id} />\r\n        }) : <div>no projects</div> : <div>not found</div>\r\n            \r\n        }\r\n    </div>\r\n  )\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\RenderProjectMembers.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowProjects.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowSingleProject.js",["180","181","182"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectMembers from \"./ProjectMembers\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ShowUsersToSelectForProject from \"./ShowUsersToSelectForProject\";\r\nimport Alert from \"./Alert\";\r\n\r\nexport default function ShowSingleProject() {\r\n  // accessing the value from link component using useLocation hook\r\n  const location = useLocation();\r\n  const { project, users } = location.state;\r\n  console.log(\"location state\", location.state);\r\n  let alertColor = \"pink\";\r\n  const [msg, setMsg] = useState(null);\r\n  const [title, setTitle] = useState(project.name);\r\n  const [desc, setDesc] = useState(project.desc);\r\n  const [head, setHead] = useState(project.head);\r\n  const [members, setMembers] = useState(project.members);\r\n  const [status, setStatus] = useState(project.status);\r\n  let totalMembers = [];\r\n  // const [totalEmployee, setTotalEmployee] = useState(users);\r\n  const arrOfEmpID = [];\r\n  const arrayOfIDOfAllEmployee = [];\r\n  const arrayOfIDOfAllMembers = [];\r\n  for (let index = 0; index < users.length; index++) {\r\n    if (users[index]) {\r\n      arrayOfIDOfAllEmployee.push(users[index]._id);\r\n    }\r\n  }\r\n  for (let index = 0; index < members.length; index++) {\r\n    if (members[index]) {\r\n      arrayOfIDOfAllMembers.push(members[index]._id);\r\n    }\r\n  }\r\n  for (let index = 0; index < users.length; index++) {\r\n    if (users[index]) {\r\n      if (arrayOfIDOfAllMembers.includes(users[index]._id)) {\r\n        delete users[index];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let index = 0; index < members.length; index++) {\r\n    if (members[index]) {\r\n      if (!arrayOfIDOfAllEmployee.includes(members[index]._id)) {\r\n        arrOfEmpID.push(members[index]._id);\r\n      }\r\n    }\r\n  }\r\n  // for (let index = 0; index < totalEmployee.length; index++) {\r\n  //     arrOfEmpID.push(totalEmployee[index]._id)\r\n\r\n  // }\r\n  const navigate = useNavigate();\r\n  for (let index = 0; index < members.length; index++) {\r\n    totalMembers.push(members[index]._id);\r\n  }\r\n  console.log(\"current members are \", totalMembers);\r\n  console.log(\"total users are \", users);\r\n  const onFormSubmit = async (event) => {\r\n    const currentMembers = [];\r\n    for (let index = 0; index < totalMembers.length; index++) {\r\n      if (totalMembers[index]) {\r\n        currentMembers.push(totalMembers[index]);\r\n      }\r\n    }\r\n\r\n    for (let index = 0; index < arrOfEmpID.length; index++) {\r\n      if (arrOfEmpID[index] && !currentMembers.includes(arrOfEmpID[index])) {\r\n        currentMembers.push(arrOfEmpID[index]);\r\n      }\r\n    }\r\n\r\n    if (currentMembers.length <= 0) {\r\n      console.log(\"setting the msg \");\r\n      return setMsg(\"Select at least one member\");\r\n    }\r\n\r\n    console.log(\"msg is \", msg);\r\n    console.log(\"in form all members \", totalMembers);\r\n    event.preventDefault();\r\n    const newProject = {\r\n      _id: project._id,\r\n      name: title,\r\n      desc,\r\n      head,\r\n      members: currentMembers,\r\n      status,\r\n    };\r\n\r\n    // saving all the data\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/user/update-project\",\r\n      newProject\r\n    );\r\n    console.log(\"response data is \", response.data);\r\n    if (response.data.status === \"success\") {\r\n      setMsg(\"success\");\r\n      console.log(\"success\");\r\n      console.log(\"msg is \", msg);\r\n      alertColor = \"emerald\";\r\n    } else {\r\n      setMsg(\"failed\");\r\n    }\r\n\r\n    // READ THIS\r\n    // BECAUSE OF THIS navigate we are redirecting to home page so we couldn't see the alert\r\n    // **********************\r\n    navigate(\"/user-home\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid justify-items-center\">\r\n      {msg ? <Alert alertColor={alertColor} msg={msg} /> : <div></div>}\r\n\r\n      <form onSubmit={onFormSubmit} className=\"w-full max-w-sm  \">\r\n        <label htmlFor=\"fhs\" className=\" px-2\">\r\n          Title:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"bg-gray-200 appearance-none border-2 py-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n          id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(event) => {\r\n            setTitle(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2 px-2\">\r\n          Description:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n          id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(event) => {\r\n            setDesc(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2 px-2\">\r\n          Project Head:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n          id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={head}\r\n          onChange={(event) => setHead(event.target.value)}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\" className=\"py-2 px-2\">\r\n          Status:{\" \"}\r\n        </label>\r\n        <input\r\n          className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n          id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value={status}\r\n          onChange={(event) => setStatus(event.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <h2>Project Members</h2>\r\n        {members ? (\r\n          members.map((user) => {\r\n            return (\r\n              <ProjectMembers\r\n                user={user}\r\n                setMembers={totalMembers}\r\n                key={user._id}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div>No members are allocated</div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <h2>Other Employees</h2>\r\n        {users ? (\r\n          users.map((user) => {\r\n            if (user) {\r\n              return (\r\n                <ShowUsersToSelectForProject\r\n                  user={user}\r\n                  totalEmployee={arrOfEmpID}\r\n                  key={user._id}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        ) : (\r\n          <div>No users found</div>\r\n        )}\r\n        <input\r\n          type=\"submit\"\r\n          value=\"update project\"\r\n          className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ProjectMembers.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowUsersToSelectForProject.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Navbar.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\Alert.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowProjectStatus.js",["183"],[],"import React from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ShowProjects from './ShowProjects';\r\nexport default function ShowProjectStatus() {\r\n\r\n    const [users, setUsers] = useState(null);\r\n    const [allProjects, setAllProjects] = useState(null);\r\n\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        const getAllProjects = async () => {\r\n            const {status} = location.state\r\n            console.log(\"status is \", status);\r\n            const url = \"http://localhost:5000/user/get-projects-for-updation/?status=\" + status\r\n            console.log(\"url is \", url);\r\n            const response = await axios.get(url)\r\n            if((await response).data.status === \"success\") {\r\n                setAllProjects((response.data.allProjects))\r\n            }\r\n        }\r\n\r\n        getAllProjects()\r\n        const getAllUsers = async () => {\r\n            const users = await axios.get(\"http://localhost:5000/user/getUsers\")\r\n            if(users.data) {\r\n                if(users.data.status === \"success\") {\r\n                    setUsers(users.data.users)\r\n                }\r\n            }\r\n        }\r\n        getAllUsers()\r\n        \r\n    }, []);\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div>\r\n            {\r\n                allProjects? allProjects.length > 0 ? allProjects.map((project) => {\r\n                    return <ShowProjects project={project} users={users} key={project._id} />\r\n                }) :\r\n                <div>No projects found</div> : <div>not found</div>\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserProjectStatus.js",["184"],[],"import React from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport UserSingleProject from './UserSingleProject';\r\nexport default function UserProjectStatus() {\r\n\r\n    const [allProjects, setAllProjects] = useState(null);\r\n\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        const getAllProjects = async () => {\r\n            const {status, userID} = location.state\r\n            console.log(\"status is \", status);\r\n            const url = \"http://localhost:5000/user/get-all-projects/?status=\" + status + \"&_id=\" + userID\r\n            console.log(\"url is \", url);\r\n            const response = await axios.get(url)\r\n            if((await response).data.status === \"success\") {\r\n                setAllProjects((response.data.allProjects))\r\n            }\r\n        }\r\n\r\n        getAllProjects()\r\n        \r\n    }, []);\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div>\r\n            {\r\n                allProjects? allProjects.length > 0 ? allProjects.map((project) => {\r\n                    return <UserSingleProject project={project}  key={project._id} />\r\n                }) :\r\n                <div>No projects found</div> : <div>not found</div>\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\UserSingleProject.js",["185"],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ViewProject.js",["186"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UserSingleProject from \"./UserSingleProject\";\r\n\r\nexport default function ViewProject() {\r\n  const user = useSelector((state) => state.userObj.userObj);\r\n  const location = useLocation();\r\n  const { project } = location.state;\r\n  console.log(\"location state\", location.state);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <UserSingleProject project={project} setTaskAdded={\"\"} />\r\n\r\n      </div>\r\n{/* *************************************** */}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\AddTask.js",[],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\components\\ShowTasks.js",["187","188"],[],"D:\\Node  JS Projects\\Project Management WebApp\\frontend\\src\\store\\taskSlice.js",[],[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":39,"nodeType":"195","messageId":"196","endLine":2,"endColumn":43},{"ruleId":"193","severity":1,"message":"197","line":20,"column":9,"nodeType":"195","messageId":"196","endLine":20,"endColumn":24},{"ruleId":"193","severity":1,"message":"198","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"193","severity":1,"message":"199","line":20,"column":11,"nodeType":"195","messageId":"196","endLine":20,"endColumn":25},{"ruleId":"193","severity":1,"message":"198","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":18},{"ruleId":"193","severity":1,"message":"200","line":13,"column":11,"nodeType":"195","messageId":"196","endLine":13,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":4,"column":23,"nodeType":"195","messageId":"196","endLine":4,"endColumn":27},{"ruleId":"193","severity":1,"message":"201","line":17,"column":9,"nodeType":"195","messageId":"196","endLine":17,"endColumn":15},{"ruleId":"193","severity":1,"message":"202","line":23,"column":7,"nodeType":"195","messageId":"196","endLine":23,"endColumn":10},{"ruleId":"193","severity":1,"message":"203","line":52,"column":9,"nodeType":"195","messageId":"196","endLine":52,"endColumn":18},{"ruleId":"193","severity":1,"message":"204","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":14},{"ruleId":"193","severity":1,"message":"205","line":5,"column":23,"nodeType":"195","messageId":"196","endLine":5,"endColumn":34},{"ruleId":"193","severity":1,"message":"206","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"205","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":21},{"ruleId":"193","severity":1,"message":"207","line":7,"column":11,"nodeType":"195","messageId":"196","endLine":7,"endColumn":15},{"ruleId":"193","severity":1,"message":"208","line":12,"column":12,"nodeType":"195","messageId":"196","endLine":12,"endColumn":16},{"ruleId":"193","severity":1,"message":"209","line":12,"column":18,"nodeType":"195","messageId":"196","endLine":12,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"210","line":21,"column":19,"nodeType":"195","messageId":"196","endLine":21,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":187,"column":28,"nodeType":"213","messageId":"214","endLine":187,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":35,"column":8,"nodeType":"217","endLine":35,"endColumn":10,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"216","line":25,"column":8,"nodeType":"217","endLine":25,"endColumn":10,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"220","line":39,"column":6,"nodeType":"217","endLine":39,"endColumn":8,"suggestions":"221"},{"ruleId":"193","severity":1,"message":"207","line":7,"column":9,"nodeType":"195","messageId":"196","endLine":7,"endColumn":13},{"ruleId":"193","severity":1,"message":"222","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"220","line":76,"column":6,"nodeType":"217","endLine":76,"endColumn":8,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'currentPathName' is assigned a value but never used.","'Navigate' is defined but never used.","'userAfterLogin' is assigned a value but never used.","'currentLoginStatus' is assigned a value but never used.","'logOut' is assigned a value but never used.","'msg' is assigned a value but never used.","'ImagePath' is assigned a value but never used.","'taskAdded' is assigned a value but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'setMembers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.","ArrayExpression",["226"],["227"],"React Hook useEffect has missing dependencies: 'dispatch', 'project._id', 'user._id', and 'user.position'. Either include them or remove the dependency array.",["228"],"'Draggable' is defined but never used.",["229"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"230","fix":"232"},{"desc":"233","fix":"234"},{"desc":"233","fix":"235"},"Update the dependencies array to be: [location.state]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [dispatch, project._id, user._id, user.position]",{"range":"239","text":"240"},{"range":"241","text":"240"},[1261,1263],"[location.state]",[916,918],[1432,1434],"[dispatch, project._id, user._id, user.position]",[2429,2431]]