{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowAllEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowAllEmployee(_ref) {\n  _s();\n\n  let {\n    user,\n    collectUsers,\n    useCollectedUsers\n  } = _ref;\n  const ImagePath = \"http://localhost:5000/profile-pic/\"; // console.log(\"in child\");\n  // const [useCollectedUsers, setuseCollectedUsers] = useState([]);\n  // here collectUsers is a function sent from parent to child\n  // i am updating this function with current selected list of users.\n  // and sending back this list to parent component.\n\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked(!checked);\n    console.log(\"checked value is \", checked);\n    console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\n  };\n\n  console.log(\"final value of check is \", checked);\n  let copy = useCollectedUsers();\n\n  if (checked) {\n    copy = [...copy];\n\n    if (!copy.includes(user._id)) {\n      copy.push(user._id);\n      console.log(\"user added \", copy);\n      collectUsers(copy);\n    }\n  } else {\n    if (copy.includes(user._id)) {\n      delete copy[copy.indexOf(user._id)]; // console.log(\"user deleted \", copy);\n\n      collectUsers(copy);\n    }\n  }\n\n  console.log(\"final array \", useCollectedUsers());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.pic ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ImagePath + user.pic,\n        alt: \"loading\",\n        height: \"50\",\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"not uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.name,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.email,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowAllEmployee, \"1xf9eTb20Tl780YWslI2Iorr7ZY=\", true);\n\n_c = ShowAllEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowAllEmployee\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowAllEmployee.js"],"names":["React","useState","ShowAllEmployee","user","collectUsers","useCollectedUsers","ImagePath","checked","setChecked","handleChange","console","log","copy","includes","_id","push","indexOf","pic","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,eAAT,OAIZ;AAAA;;AAAA,MAJqC;AACtCC,IAAAA,IADsC;AAEtCC,IAAAA,YAFsC;AAGtCC,IAAAA;AAHsC,GAIrC;AACD,QAAMC,SAAS,GAAG,oCAAlB,CADC,CAED;AACA;AAEA;AACA;AACA;;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,OAAjC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,GAJD;;AAKAD,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,OAAxC;AACA,MAAIK,IAAI,GAAGP,iBAAiB,EAA5B;;AACA,MAAIE,OAAJ,EAAa;AACXK,IAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,CAAP;;AACA,QAAI,CAACA,IAAI,CAACC,QAAL,CAAcV,IAAI,CAACW,GAAnB,CAAL,EAA8B;AAC5BF,MAAAA,IAAI,CAACG,IAAL,CAAUZ,IAAI,CAACW,GAAf;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,IAA3B;AAEAR,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD;AACF,GARD,MAQO;AACL,QAAIA,IAAI,CAACC,QAAL,CAAcV,IAAI,CAACW,GAAnB,CAAJ,EAA6B;AAC3B,aAAOF,IAAI,CAACA,IAAI,CAACI,OAAL,CAAab,IAAI,CAACW,GAAlB,CAAD,CAAX,CAD2B,CAE3B;;AACAV,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD;AACF;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,iBAAiB,EAA7C;AACA,sBACE;AAAA,4BACE;AAAA,iBACGF,IAAI,CAACc,GAAL,gBACC;AACE,QAAA,GAAG,EAAEX,SAAS,GAAGH,IAAI,CAACc,GADxB;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,MAAM,EAAC,IAHT;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAWE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEd,IAAI,CAACe,IAA/B;AAAqC,QAAA,QAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEf,IAAI,CAACgB,KAA/B;AAAsC,QAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEZ,OAAhC;AAAyC,QAAA,QAAQ,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA1DuBP,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ShowAllEmployee({\r\n  user,\r\n  collectUsers,\r\n  useCollectedUsers,\r\n}) {\r\n  const ImagePath = \"http://localhost:5000/profile-pic/\";\r\n  // console.log(\"in child\");\r\n  // const [useCollectedUsers, setuseCollectedUsers] = useState([]);\r\n\r\n  // here collectUsers is a function sent from parent to child\r\n  // i am updating this function with current selected list of users.\r\n  // and sending back this list to parent component.\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n    console.log(\"checked value is \", checked);\r\n    console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\r\n  };\r\n  console.log(\"final value of check is \", checked);\r\n  let copy = useCollectedUsers();\r\n  if (checked) {\r\n    copy = [...copy];\r\n    if (!copy.includes(user._id)) {\r\n      copy.push(user._id);\r\n      console.log(\"user added \", copy);\r\n\r\n      collectUsers(copy);\r\n    }\r\n  } else {\r\n    if (copy.includes(user._id)) {\r\n      delete copy[copy.indexOf(user._id)];\r\n      // console.log(\"user deleted \", copy);\r\n      collectUsers(copy);\r\n    }\r\n  }\r\n  console.log(\"final array \", useCollectedUsers());\r\n  return (\r\n    <div >\r\n      <div>\r\n        {user.pic ? (\r\n          <img\r\n            src={ImagePath + user.pic}\r\n            alt=\"loading\"\r\n            height=\"50\"\r\n            width=\"50\"\r\n          />\r\n        ) : (\r\n          <div>not uploaded</div>\r\n        )}\r\n        <input type=\"text\" value={user.name} readOnly />\r\n        <input type=\"text\" value={user.email} readOnly />\r\n        <input type=\"checkbox\" checked={checked} onChange={handleChange} />\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}