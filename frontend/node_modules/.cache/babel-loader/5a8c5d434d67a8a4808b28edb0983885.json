{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\AssignProjects.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShowAllEmployee from \"./ShowAllEmployee\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssignProjects() {\n  _s();\n\n  // creating state variables\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [projectHead, setProjectHead] = useState(\"\");\n  const user = useSelector(state => state.userObj.userObj); // creating onchange events\n\n  const onTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const onDescChange = event => {\n    setDesc(event.target.value);\n  };\n\n  const onProjectHeadChange = event => {\n    setProjectHead(event.target.value);\n  };\n\n  const [allUsers, setAllUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]); // using useEffect react hook\n  // this hook runs before even react component renders\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/user/getUsers\").then(result => {\n      console.log(\"this method is called\");\n      setAllUsers(result.data.users);\n    });\n  }, []); // using this function i am collecting all the selected users from the child component(ShowAllEmployee)\n\n  const getSelectedUsers = selectedUsersFromChildComponent => {\n    setSelectedUsers(selectedUsersFromChildComponent);\n  }; // return selected users\n\n\n  const returnSelectedUsers = () => {\n    return selectedUsers;\n  };\n\n  const [msg, setMsg] = useState(null); // on form submit\n\n  const onFormSubmit = async event => {\n    event.preventDefault(); // in arr i am filtering all invalid _id like undefined which comes from frontend\n\n    let arr = [];\n\n    for (let index = 0; index < selectedUsers.length; index++) {\n      if (selectedUsers[index]) {\n        arr.push(selectedUsers[index]);\n      }\n    }\n\n    console.log(\"final list of all selected users \", arr);\n    console.log(\"list of all selected  \", selectedUsers);\n    const project = {\n      title,\n      desc,\n      projectHead,\n      allUsers: arr,\n      userEmail: user.email\n    };\n    const response = await axios.post(\"http://localhost:5000/user/add-project\", project);\n\n    if (response) {\n      if (response.data.status === \"success\") {\n        alert(\"success\");\n        setMsg(response.data.msg);\n        console.log(\"success\");\n      }\n    } else {\n      alert(\"failed\");\n      console.log(\"failed\");\n      setMsg(\"Wrong\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/user-home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Project Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: \"Project Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"desc\",\n        value: desc,\n        onChange: onDescChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: \"Project Head: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"projectHead\",\n        value: projectHead,\n        onChange: onProjectHeadChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"add project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"all\",\n      children: \"All Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), allUsers ? allUsers.map(function (value, index) {\n      return /*#__PURE__*/_jsxDEV(ShowAllEmployee, {\n        user: value,\n        collectUsers: getSelectedUsers,\n        useCollectedUsers: returnSelectedUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssignProjects, \"Pqqdq9RBAcr8CAxMVCaogxwqu8o=\", false, function () {\n  return [useSelector];\n});\n\n_c = AssignProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignProjects\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/AssignProjects.js"],"names":["axios","React","useState","useEffect","Link","ShowAllEmployee","useSelector","useDispatch","AssignProjects","title","setTitle","desc","setDesc","projectHead","setProjectHead","user","state","userObj","onTitleChange","event","target","value","onDescChange","onProjectHeadChange","allUsers","setAllUsers","selectedUsers","setSelectedUsers","get","then","result","console","log","data","users","getSelectedUsers","selectedUsersFromChildComponent","returnSelectedUsers","msg","setMsg","onFormSubmit","preventDefault","arr","index","length","push","project","userEmail","email","response","post","status","alert","map"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShowAllEmployee from \"./ShowAllEmployee\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nexport default function AssignProjects() {\r\n  // creating state variables\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [projectHead, setProjectHead] = useState(\"\");\r\n\tconst user = useSelector((state) => state.userObj.userObj)\r\n  // creating onchange events\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const onDescChange = (event) => {\r\n    setDesc(event.target.value);\r\n  };\r\n  const onProjectHeadChange = (event) => {\r\n    setProjectHead(event.target.value);\r\n  };\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n\r\n  // using useEffect react hook\r\n  // this hook runs before even react component renders\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/user/getUsers\").then((result) => {\r\n      console.log(\"this method is called\");\r\n      setAllUsers(result.data.users);\r\n    });\r\n  }, []);\r\n\r\n  // using this function i am collecting all the selected users from the child component(ShowAllEmployee)\r\n  const getSelectedUsers = (selectedUsersFromChildComponent) => {\r\n    setSelectedUsers(selectedUsersFromChildComponent);\r\n  };\r\n\r\n  // return selected users\r\n  const returnSelectedUsers = () => {\r\n    return selectedUsers;\r\n  };\r\n\r\n  const [msg, setMsg] = useState(null);\r\n  \r\n  // on form submit\r\n  const onFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\t// in arr i am filtering all invalid _id like undefined which comes from frontend\r\n\r\n    let arr = []\r\n\tfor (let index = 0; index < selectedUsers.length; index++) {\r\n\t\tif(selectedUsers[index]) {\r\n\t\t\tarr.push(selectedUsers[index])\r\n\t\t}\t\t\r\n\t}\r\n\r\n    console.log(\"final list of all selected users \", arr);\r\n    console.log(\"list of all selected  \", selectedUsers);\r\n    const project = {\r\n      title,\r\n      desc,\r\n      projectHead,\r\n\t  allUsers: arr,\r\n\t  userEmail: user.email\r\n    };\r\n    const response = await axios.post(\"http://localhost:5000/user/add-project\", project)\r\n\tif(response) {\r\n\t\tif(response.data.status === \"success\") {\r\n\t\t\talert(\"success\")\r\n\t\t\tsetMsg(response.data.msg)\r\n\t\t\tconsole.log(\"success\");\r\n\t\t}\r\n\t} else {\r\n\t\talert(\"failed\")\r\n\t\tconsole.log(\"failed\");\r\n\t\tsetMsg(\"Wrong\")\r\n\t}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/user-home\">Home</Link>\r\n      <h3>Create Project</h3>\r\n\t  <h3>{msg}</h3>\r\n      <br />\r\n      <form method=\"post\" onSubmit={onFormSubmit}>\r\n        <label htmlFor=\"title\">Project Title: </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={onTitleChange}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"desc\">Project Description: </label>\r\n        <input type=\"text\" name=\"desc\" value={desc} onChange={onDescChange} />\r\n        <br />\r\n        <label htmlFor=\"desc\">Project Head: </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"projectHead\"\r\n          value={projectHead}\r\n          onChange={onProjectHeadChange}\r\n        />\r\n        <input type=\"submit\" value=\"add project\" />\r\n      </form>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      {/* here in map function \"return\" is necessary. without return it will not work */}\r\n      <label htmlFor=\"all\">All Employees</label>\r\n      {allUsers ? (\r\n        allUsers.map(function (value, index) {\r\n          return (\r\n            <ShowAllEmployee\r\n              user={value}\r\n              collectUsers={getSelectedUsers}\r\n              useCollectedUsers={returnSelectedUsers}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <div>No data found</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}