{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const taskSlice = createSlice({\n  name: \"all user tasks\",\n  initialState: {\n    allTasks: []\n  },\n  reducers: {\n    updateTasks: (state, action) => {\n      if (state.allTasks) {\n        for (let index = 0; index < state.allTasks.length; index++) {\n          if (state.allTasks[index].projectID === action.payload.projectID) {\n            state.allTasks[index] = { ...action.payload\n            };\n            return;\n          }\n        }\n\n        state.allTasks.push({ ...action.payload\n        });\n      } else {\n        state.allTasks = [{ ...action.payload\n        }];\n      }\n    }\n  }\n});\nexport const {\n  updateTasks\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/store/taskSlice.js"],"names":["createSlice","taskSlice","name","initialState","allTasks","reducers","updateTasks","state","action","index","length","projectID","payload","push","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAG,gBAD0B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAG;AADD,GAFmB;AAKjCC,EAAAA,QAAQ,EAAG;AACPC,IAAAA,WAAW,EAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC5B,UAAGD,KAAK,CAACH,QAAT,EAAmB;AACf,aAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACH,QAAN,CAAeM,MAA3C,EAAmDD,KAAK,EAAxD,EAA4D;AACxD,cAAGF,KAAK,CAACH,QAAN,CAAeK,KAAf,EAAsBE,SAAtB,KAAoCH,MAAM,CAACI,OAAP,CAAeD,SAAtD,EAAiE;AAC7DJ,YAAAA,KAAK,CAACH,QAAN,CAAeK,KAAf,IAAwB,EAAC,GAAGD,MAAM,CAACI;AAAX,aAAxB;AACA;AACH;AACJ;;AAEDL,QAAAA,KAAK,CAACH,QAAN,CAAeS,IAAf,CAAoB,EAAC,GAAGL,MAAM,CAACI;AAAX,SAApB;AACH,OATD,MASO;AACHL,QAAAA,KAAK,CAACH,QAAN,GAAiB,CAAC,EAAC,GAAGI,MAAM,CAACI;AAAX,SAAD,CAAjB;AACH;AACJ;AAdM;AALsB,CAAD,CAA7B;AAuBP,OAAO,MAAM;AAACN,EAAAA;AAAD,IAAgBL,SAAS,CAACa,OAAhC;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\nexport const taskSlice = createSlice({\r\n    name : \"all user tasks\",\r\n    initialState: {\r\n        allTasks : []\r\n    },\r\n    reducers : {\r\n        updateTasks : (state,action) => {\r\n            if(state.allTasks) {\r\n                for (let index = 0; index < state.allTasks.length; index++) {\r\n                    if(state.allTasks[index].projectID === action.payload.projectID) {\r\n                        state.allTasks[index] = {...action.payload}\r\n                        return\r\n                    }\r\n                }\r\n\r\n                state.allTasks.push({...action.payload})\r\n            } else {\r\n                state.allTasks = [{...action.payload}]\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {updateTasks} = taskSlice.actions\r\nexport default taskSlice.reducer"]},"metadata":{},"sourceType":"module"}