{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\UpdateProjectStatus.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ShowProjects from './ShowProjects';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateProjectStatus() {\n  _s();\n\n  const user = useSelector(state => state.userObj.userObj);\n  const [allProjects, setAllProjects] = useState(null);\n  useEffect(() => {\n    const getAllProjects = async () => {\n      const projects = await axios.get(\"http://localhost:5000/user/update\");\n\n      if (projects.data && projects.data.status === \"success\") {\n        setAllProjects(projects.data.allProjects);\n      }\n    };\n\n    getAllProjects();\n  }, []);\n  console.log(\"all projects\", allProjects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"this is update project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), allProjects.length ? allProjects.map(project => {\n      return /*#__PURE__*/_jsxDEV(ShowProjects, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProjectStatus, \"fFzMfeDtg0Zk30RHE1UwPGTAKwY=\", false, function () {\n  return [useSelector];\n});\n\n_c = UpdateProjectStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProjectStatus\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/UpdateProjectStatus.js"],"names":["axios","React","useState","useEffect","useDispatch","useSelector","ShowProjects","UpdateProjectStatus","user","state","userObj","allProjects","setAllProjects","getAllProjects","projects","get","data","status","console","log","length","map","project"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAE1C,QAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcA,OAA1B,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,cAAc,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,mCAAV,CAAvB;;AACA,UAAID,QAAQ,CAACE,IAAT,IAAiBF,QAAQ,CAACE,IAAT,CAAcC,MAAd,KAAyB,SAA9C,EAAyD;AACrDL,QAAAA,cAAc,CAACE,QAAQ,CAACE,IAAT,CAAcL,WAAf,CAAd;AACH;AACJ,KALD;;AAMAE,IAAAA,cAAc;AAEjB,GATQ,EASN,EATM,CAAT;AAUAK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,WAA5B;AAEF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQA,WAAW,CAACS,MAAZ,GACAT,WAAW,CAACU,GAAZ,CAAiBC,OAAD,IAAa;AAC7B,0BAAO,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFG,CADA,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3BuBf,mB;UAEPF,W;;;KAFOE,mB","sourcesContent":["import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ShowProjects from './ShowProjects';\r\nexport default function UpdateProjectStatus() {\r\n\r\n    const user = useSelector((state) => state.userObj.userObj)\r\n    const [allProjects, setAllProjects] = useState(null);\r\n    useEffect(() => {\r\n        const getAllProjects = async () => {\r\n            const projects = await axios.get(\"http://localhost:5000/user/update\")\r\n            if (projects.data && projects.data.status === \"success\") {\r\n                setAllProjects(projects.data.allProjects)\r\n            }\r\n        }\r\n        getAllProjects()\r\n\r\n    }, [])\r\n    console.log(\"all projects\", allProjects);\r\n\r\n  return (\r\n    <div>\r\n        <h3>this is update project</h3>\r\n        {\r\n            allProjects.length ?\r\n            allProjects.map((project) => {\r\n            return <ShowProjects project={project} />\r\n        }) : <div>no projects</div>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}