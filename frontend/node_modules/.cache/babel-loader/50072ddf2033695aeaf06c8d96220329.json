{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\AssignProjects.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport ShowAllEmployee from \"./ShowAllEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssignProjects() {\n  _s();\n\n  // creating state variables\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\"); // creating onchange events\n\n  const onTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const onDescChange = event => {\n    setDesc(event.target.value);\n  };\n\n  const [allUsers, setAllUsers] = useState([]); // using useEffect react hook\n\n  console.log(\"demo\");\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/user/getUsers\").then(result => {\n      console.log(\"this method is called\");\n      setAllUsers(result.data.users);\n    });\n  }, []);\n  console.log(\"all data of allUsers \", allUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Project Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"desc\",\n        children: \"Project Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"desc\",\n        value: desc,\n        onChange: onDescChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"all\",\n      children: \"All Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), allUsers ? allUsers.map(function (value, index) {\n      return /*#__PURE__*/_jsxDEV(ShowAllEmployee, {\n        user: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssignProjects, \"dhKn8/hLWR9s+G1837vhpIzL3Hs=\");\n\n_c = AssignProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignProjects\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/AssignProjects.js"],"names":["axios","React","useState","useEffect","ShowAllEmployee","AssignProjects","title","setTitle","desc","setDesc","onTitleChange","event","target","value","onDescChange","allUsers","setAllUsers","console","log","get","then","result","data","users","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAHuC,CAKvC;;AAEA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC9BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAduC,CAevC;;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACmB,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAuDC,MAAD,IAAY;AAClEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,MAAAA,WAAW,CAACK,MAAM,CAACC,IAAP,CAAYC,KAAb,CAAX;AACD,KAHC;AAID,GALQ,EAKN,EALM,CAAT;AAMAN,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,QAArC;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,MAAM,EAAC,MAAb;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAET,KAHT;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEF,IAAtC;AAA4C,QAAA,QAAQ,EAAEM;AAAtD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAeE;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA,YAjBF,eAmBE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,EAqBIC,QAAQ,GAAGA,QAAQ,CAACS,GAAT,CAAc,UAAUX,KAAV,EAAiBY,KAAjB,EAAyB;AAEhD,0BAAO,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEZ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KAJU,CAAH,gBAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAxDuBR,c;;KAAAA,c","sourcesContent":["import axios from \"axios\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport ShowAllEmployee from \"./ShowAllEmployee\";\r\nexport default function AssignProjects() {\r\n  // creating state variables\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n\r\n  // creating onchange events\r\n\r\n  const onTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const onDescChange = (event) => {\r\n    setDesc(event.target.value);\r\n  };\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  // using useEffect react hook\r\n  console.log(\"demo\");\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/user/getUsers\").then((result) => {\r\n    console.log(\"this method is called\");\r\n    setAllUsers(result.data.users);\r\n  });\r\n  }, []);\r\n  console.log(\"all data of allUsers \", allUsers);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create Project</h3>\r\n      <br />\r\n      <form method=\"post\">\r\n        <label htmlFor=\"title\">Project Title: </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={onTitleChange}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"desc\">Project Description: </label>\r\n        <input type=\"text\" name=\"desc\" value={desc} onChange={onDescChange} />\r\n      </form>\r\n      <br />\r\n      <br />\r\n      <br />\r\n{/* here in map function \"return\" is necessary. without return it will not work */}\r\n      <label htmlFor=\"all\">All Employees</label>\r\n      {\r\n        allUsers ? allUsers.map( function (value, index ) {\r\n          \r\n          return <ShowAllEmployee user={value} />\r\n          \r\n        }) :\r\n        <div>No data found</div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}