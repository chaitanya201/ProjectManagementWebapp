{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node  JS Projects\\\\Project Management WebApp\\\\frontend\\\\src\\\\components\\\\ShowSingleProject.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectMembers from \"./ProjectMembers\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowSingleProject() {\n  _s();\n\n  // accessing the value from link component using useLocation hook\n  const location = useLocation();\n  const {\n    project\n  } = location.state;\n  const [title, setTitle] = useState(project.name);\n  const [desc, setDesc] = useState(project.desc);\n  const [head, setHead] = useState(project.head);\n  const [members, setMembers] = useState(project.members);\n  const [status, setStatus] = useState(project.status);\n  let totalMembers = [];\n\n  for (let index = 0; index < members.length; index++) {\n    totalMembers.push(members[index]._id);\n  }\n\n  console.log(\"current members are \", totalMembers);\n\n  const onFormSubmit = event => {\n    const currentMembers = [];\n\n    for (let index = 0; index < totalMembers.length; index++) {\n      if (totalMembers[index]) {\n        currentMembers.push(totalMembers[index]);\n      }\n    }\n\n    console.log(\"in form all members \", totalMembers);\n    event.preventDefault();\n    const newProject = {\n      name: title,\n      desc,\n      head,\n      members: currentMembers,\n      status\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/user-home\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fhs\",\n      children: \"Title: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => {\n          setTitle(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: desc,\n        onChange: event => {\n          setDesc(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Project Head: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: head,\n        onChange: event => setHead(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fhs\",\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: status,\n        onChange: event => setStatus(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), members ? members.map(user => {\n        return /*#__PURE__*/_jsxDEV(ProjectMembers, {\n          user: user,\n          setMembers: totalMembers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No members are allocated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"update project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowSingleProject, \"zK0AdsGBqXDJy9QU4/AQruPI5Kw=\", false, function () {\n  return [useLocation];\n});\n\n_c = ShowSingleProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSingleProject\");","map":{"version":3,"sources":["D:/Node  JS Projects/Project Management WebApp/frontend/src/components/ShowSingleProject.js"],"names":["React","Link","ProjectMembers","useLocation","useState","ShowSingleProject","location","project","state","title","setTitle","name","desc","setDesc","head","setHead","members","setMembers","status","setStatus","totalMembers","index","length","push","_id","console","log","onFormSubmit","event","currentMembers","preventDefault","newProject","target","value","map","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectMembers from \"./ProjectMembers\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nexport default function ShowSingleProject() {\r\n  // accessing the value from link component using useLocation hook\r\n  const location = useLocation();\r\n  const { project } = location.state;\r\n\r\n  const [title, setTitle] = useState(project.name);\r\n  const [desc, setDesc] = useState(project.desc);\r\n  const [head, setHead] = useState(project.head);\r\n  const [members, setMembers] = useState(project.members);\r\n  const [status, setStatus] = useState(project.status);\r\n  let totalMembers = [];\r\n\r\n  for (let index = 0; index < members.length; index++) {\r\n    totalMembers.push(members[index]._id);\r\n  }\r\n  console.log(\"current members are \", totalMembers);\r\n\r\n  const onFormSubmit = (event) => {\r\n\r\n    const currentMembers = []\r\n    for (let index = 0; index < totalMembers.length; index++) {\r\n        if(totalMembers[index]) {\r\n            currentMembers.push(totalMembers[index])\r\n        }\r\n    }\r\n    console.log(\"in form all members \", totalMembers);\r\n    event.preventDefault();\r\n    const newProject = {\r\n      name: title,\r\n      desc,\r\n      head,\r\n      members: currentMembers,\r\n      status\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/user-home\">Home</Link>\r\n      <label htmlFor=\"fhs\">Title: </label>\r\n      <form onSubmit={onFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(event) => {\r\n            setTitle(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={(event) => {\r\n            setDesc(event.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Project Head: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={head}\r\n          onChange={(event) => setHead(event.target.value)}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"fhs\">Status: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={status}\r\n          onChange={(event) => setStatus(event.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <h2>Project Members</h2>\r\n        {members ? (\r\n          members.map((user) => {\r\n            return <ProjectMembers user={user} setMembers={totalMembers} />;\r\n          })\r\n        ) : (\r\n          <div>No members are allocated</div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <input type=\"submit\" value=\"update project\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}